var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/guards/AbilitiesGuard.html",[0,2.366,1,1.896]],["body/guards/AbilitiesGuard.html",[1,2.103,2,1.779,3,0.289,4,0.256,5,0.256,6,2.043,7,0.323,8,1.155,9,3.672,10,1.745,11,1.779,12,3.842,13,2.642,14,0.835,15,2.443,16,1.252,17,0.031,18,1.252,19,0.642,20,1.252,21,1.779,22,3.443,23,2.443,24,2.625,25,0.783,26,2.625,27,2.103,28,3.119,29,0.624,30,1.583,31,1.583,32,2.043,33,1.066,34,0.476,35,1.426,36,1.583,37,1.583,38,1.426,39,2.443,40,3.014,41,1.583,42,0.289,43,0.06,44,1.583,45,2.625,46,1.472,47,1.779,48,2.443,49,2.443,50,1.779,51,0.998,52,2.443,53,2.043,54,2.443,55,2.043,56,2.443,57,2.443,58,2.443,59,1.642,60,2.335,61,2.443,62,1.426,63,2.625,64,2.443,65,2.443,66,1.779,67,2.625,68,1.779,69,1.583,70,1.085,71,2.043,72,0.017,73,0.017]],["title/controllers/AppController.html",[74,1.573,75,2.105]],["body/controllers/AppController.html",[3,0.391,4,0.347,5,0.347,7,0.437,8,1.431,14,1.034,16,1.148,17,0.031,18,1.148,19,0.589,20,1.148,25,1.431,29,0.64,30,2.142,34,0.645,42,0.391,43,0.081,46,1.351,59,1.55,72,0.021,73,0.021,74,2.161,75,2.892,76,1.601,77,2.765,78,4.524,79,4.463,80,2.161,81,3.306,82,1.55,83,3.306,84,4.463,85,3.306,86,3.732,87,2.408,88,2.408,89,2.678,90,2.765,91,3.306,92,3.306,93,3.306,94,2.765,95,1.601,96,3.306,97,1.753,98,3.306,99,3.306,100,2.765]],["title/modules/AppModule.html",[101,1.128,102,2.105]],["body/modules/AppModule.html",[1,2.229,3,0.313,4,0.278,5,0.278,17,0.031,29,0.701,34,0.516,42,0.313,43,0.065,72,0.018,73,0.018,75,2.905,76,1.85,89,2.876,90,2.213,101,1.557,102,3.994,103,1.175,104,1.281,105,1.544,106,1.544,107,1.281,108,2.376,109,1.544,110,2.213,111,2.213,112,2.213,113,3.166,114,2.876,115,3.166,116,2.876,117,2.229,118,1.544,119,1.544,120,2.646,121,2.783,122,2.646,123,2.646,124,2.646,125,2.646,126,2.213,127,2.646,128,2.646,129,2.475,130,2.646,131,2.646,132,2.646,133,2.646,134,3.194,135,3.82,136,3.194]],["title/injectables/AppService.html",[33,0.961,89,1.722]],["body/injectables/AppService.html",[3,0.491,4,0.436,5,0.436,7,0.549,8,1.659,14,0.962,17,0.03,25,1.331,29,0.491,33,1.531,34,0.809,42,0.491,43,0.102,59,1.442,72,0.025,73,0.025,78,4.935,82,1.797,89,2.743,137,2.201,138,3.472,139,4.151,140,4.151,141,4.151]],["title/controllers/AuthController.html",[74,1.573,142,2.105]],["body/controllers/AuthController.html",[3,0.385,4,0.341,5,0.341,7,0.43,8,1.415,14,0.753,16,1.129,17,0.031,18,1.129,19,0.786,20,1.129,25,1.043,29,0.665,34,0.634,42,0.385,43,0.08,46,1.328,59,1.129,72,0.021,73,0.021,74,1.575,76,1.575,80,1.575,87,2.369,88,2.369,97,1.724,142,2.86,143,2.719,144,2.719,145,3.252,146,3.691,147,3.252,148,3.754,149,3.252,150,3.252,151,2.719,152,2.719,153,2.656,154,2.719,155,3.691,156,2.719,157,1.444,158,3.252,159,2.86,160,2.719,161,3.252,162,3.252,163,3.252,164,3.252,165,1.898,166,2.34,167,3.252]],["title/classes/AuthEntity.html",[43,0.079,168,2.105]],["body/classes/AuthEntity.html",[3,0.499,4,0.443,5,0.443,7,0.558,14,0.977,17,0.03,19,0.751,29,0.499,42,0.499,43,0.103,72,0.025,73,0.025,80,2.042,82,1.815,157,1.873,168,3.386,169,1.873,170,3.527,171,2.531,172,4.748,173,3.679,174,4.217]],["title/modules/AuthModule.html",[101,1.128,113,1.896]],["body/modules/AuthModule.html",[3,0.348,4,0.309,5,0.309,17,0.031,29,0.696,34,0.573,42,0.348,43,0.072,72,0.02,73,0.02,76,1.994,101,1.65,103,1.306,104,1.423,105,1.716,106,1.716,107,1.423,108,2.518,109,1.716,113,3.535,116,2.977,117,2.403,118,1.716,119,1.716,121,2.999,142,3.078,153,2.977,154,2.458,175,2.458,176,2.458,177,2.939,178,3.278,179,2.939,180,2.939,181,3.442,182,1.558,183,1.306,184,2.939,185,2.141,186,4.116,187,1.905,188,2.939,189,2.939,190,2.939,191,2.939,192,2.458,193,2.939,194,2.939,195,2.939]],["title/injectables/AuthService.html",[33,0.961,153,1.722]],["body/injectables/AuthService.html",[3,0.32,4,0.283,5,0.283,7,0.357,8,1.243,10,1.877,14,0.898,16,1.346,17,0.031,18,1.346,19,0.69,20,1.346,25,0.866,27,2.262,29,0.621,33,1.147,34,0.526,42,0.32,43,0.066,45,2.823,46,1.583,47,1.459,51,1.583,59,0.938,69,2.511,70,1.721,72,0.018,73,0.018,82,1.897,137,1.431,146,3.241,153,2.055,165,2.646,166,2.627,168,1.749,172,2.258,182,1.431,183,2.014,185,1.967,196,2.258,197,2.938,198,2.258,199,4.144,200,5.626,201,2.7,202,3.876,203,2.7,204,2.258,205,2.258,206,2.7,207,2.823,208,2.511,209,2.258,210,2.7,211,2.258,212,2.7,213,3.876,214,2.7,215,2.258,216,2.7,217,2.7,218,2.258,219,2.258]],["title/classes/CaslAbilityFactory.html",[13,1.573,43,0.079]],["body/classes/CaslAbilityFactory.html",[3,0.326,4,0.289,5,0.289,7,0.365,8,1.261,13,1.905,14,0.638,16,0.957,17,0.031,18,0.957,19,0.817,20,0.957,25,0.884,29,0.543,41,1.786,42,0.592,43,0.067,47,1.038,51,1.607,59,0.957,62,1.609,70,1.224,72,0.019,73,0.019,95,2.741,169,1.224,219,2.305,220,2.296,221,1.786,222,3.933,223,3.933,224,2.756,225,2.756,226,3.933,227,3.289,228,2.756,229,3.289,230,2.756,231,1.786,232,1.609,233,2.756,234,2.756,235,3.289,236,2.296,237,2.865,238,2.972,239,2.972,240,2.008,241,2.305,242,3.933,243,2.756,244,2.756,245,2.756,246,2.756,247,2.756,248,2.756,249,2.756,250,2.756,251,2.008,252,2.756,253,1.786,254,2.756,255,2.756,256,2.756,257,2.756]],["title/modules/CaslModule.html",[101,1.128,114,1.722]],["body/modules/CaslModule.html",[3,0.456,4,0.404,5,0.404,13,3.029,17,0.03,29,0.584,30,2.495,31,2.495,34,0.751,42,0.456,43,0.094,72,0.023,73,0.023,101,1.891,103,1.71,104,1.864,105,2.247,106,2.247,107,1.864,108,2.615,109,3.178,114,3.147,117,2.88,118,2.247,119,2.247,258,3.22,259,3.22,260,3.85]],["title/modules/CommonModule.html",[101,1.128,115,1.896]],["body/modules/CommonModule.html",[3,0.486,4,0.431,5,0.431,17,0.031,29,0.664,34,0.801,35,2.398,42,0.486,43,0.101,72,0.024,73,0.024,101,1.786,103,1.825,108,2.178,115,3.001,134,3.436,136,3.436,261,4.108,262,5.141,263,3.331,264,4.108,265,4.108]],["title/classes/CreateUserDto.html",[43,0.079,266,1.896]],["body/classes/CreateUserDto.html",[3,0.323,4,0.286,5,0.286,7,0.361,14,1.22,17,0.03,19,0.938,29,0.462,42,0.323,43,0.096,51,1.863,72,0.019,73,0.019,80,2.551,82,2.071,157,1.212,165,3.075,166,2.793,169,1.212,171,1.891,173,3.225,266,2.279,267,4.583,268,1.987,269,4.405,270,3.813,271,3.813,272,4.56,273,2.727,274,2.727,275,2.727,276,2.727,277,2.727,278,2.727,279,2.727,280,2.727,281,2.727,282,2.727,283,3.265,284,4.163,285,4.56,286,2.727,287,4.405,288,2.727,289,2.281,290,1.987,291,3.322,292,2.727,293,2.727,294,3.265,295,2.727,296,2.727,297,2.727]],["title/classes/HttpExceptionFilter.html",[43,0.079,263,2.105]],["body/classes/HttpExceptionFilter.html",[3,0.353,4,0.313,5,0.313,7,0.395,8,1.334,14,0.691,16,1.036,17,0.031,18,1.036,19,0.531,20,1.036,25,0.956,29,0.492,34,0.582,42,0.353,43,0.073,44,2.695,47,2.051,66,3.774,67,3.03,68,3.03,70,1.325,72,0.02,73,0.02,82,1.036,169,1.325,263,2.695,298,3.478,299,2.495,300,4.789,301,4.159,302,4.789,303,4.789,304,5.18,305,2.983,306,5.18,307,2.983,308,4.789,309,2.983,310,4.789,311,2.495,312,2.983,313,2.983,314,2.983,315,2.983,316,2.983,317,2.983,318,4.789,319,2.983,320,2.983,321,2.983,322,2.983,323,2.983,324,2.983,325,2.983]],["title/interfaces/IAbilityMeta.html",[38,1.896,326,2.105]],["body/interfaces/IAbilityMeta.html",[3,0.439,4,0.389,5,0.389,7,0.49,17,0.031,19,0.858,29,0.57,30,2.402,31,2.402,34,0.723,37,2.402,38,3.121,42,0.633,47,1.812,62,3.622,63,4.123,72,0.023,73,0.023,171,2.331,240,4.123,326,2.402,327,3.706,328,2.7,329,3.706,330,3.119,331,4.026,332,3.1]],["title/injectables/JwtAuthGuard.html",[33,0.961,129,2.105]],["body/injectables/JwtAuthGuard.html",[3,0.352,4,0.312,5,0.312,7,0.393,8,1.33,9,3.481,10,1.439,11,2.165,12,4.105,14,0.961,16,1.441,17,0.031,18,1.441,19,0.739,20,1.441,21,2.165,22,3.768,24,3.022,25,0.953,26,3.022,27,2.421,28,3.481,29,0.644,33,1.228,34,0.58,35,1.735,36,1.926,42,0.352,43,0.073,46,1.214,47,1.119,50,2.165,59,1.441,60,1.926,72,0.02,73,0.02,97,1.576,129,2.688,137,1.576,187,1.926,333,3.997,334,2.486,335,2.972,336,2.972,337,2.972,338,2.165,339,2.972,340,2.165,341,2.972,342,2.486,343,3.469,344,2.972,345,2.486,346,2.972]],["title/injectables/JwtStrategy.html",[33,0.961,178,1.896]],["body/injectables/JwtStrategy.html",[3,0.354,4,0.314,5,0.314,7,0.396,8,1.337,10,1.45,14,0.966,16,1.448,17,0.031,18,1.448,19,0.924,20,1.448,25,0.96,29,0.614,33,1.234,34,0.584,42,0.354,43,0.073,46,1.223,47,1.127,51,1.96,59,1.04,69,1.94,70,1.33,72,0.02,73,0.02,82,1.04,97,1.588,137,1.588,178,2.434,187,1.94,192,2.504,197,3.109,205,3.488,208,1.94,218,2.504,253,1.94,340,2.182,342,2.504,347,2.504,348,4.17,349,2.994,350,2.736,351,2.994,352,4.17,353,3.488,354,2.994,355,2.994,356,2.182,357,2.994,358,2.994,359,2.994,360,2.504,361,3.488,362,2.994,363,2.994,364,2.994,365,2.994,366,2.994,367,2.504,368,2.994]],["title/classes/LoginDto.html",[43,0.079,148,2.105]],["body/classes/LoginDto.html",[3,0.437,4,0.387,5,0.387,7,0.488,14,1.112,17,0.03,19,0.855,29,0.568,42,0.437,43,0.117,72,0.023,73,0.023,80,2.324,82,1.962,148,3.11,157,1.639,165,3.114,166,2.828,169,1.639,171,2.324,173,3.457,283,4.014,284,4.461,287,4.014,289,3.085,290,2.687,294,3.085,369,3.085,370,3.689,371,3.689,372,3.689,373,3.689]],["title/guards/RolesGuard.html",[0,2.366,374,2.366]],["body/guards/RolesGuard.html",[2,2.133,3,0.347,4,0.307,5,0.307,7,0.387,8,1.316,9,3.942,10,1.418,11,2.133,12,4.086,14,0.951,16,1.426,17,0.031,18,1.426,19,0.731,20,1.426,21,2.133,22,3.743,24,2.991,25,0.939,26,2.991,27,2.396,28,3.454,29,0.64,33,1.215,34,0.571,35,1.709,36,1.897,42,0.347,43,0.072,44,1.897,46,1.196,47,1.546,50,2.133,51,1.196,59,1.426,60,1.897,72,0.019,73,0.019,97,1.552,231,1.897,232,1.709,345,2.449,374,2.991,375,2.449,376,2.928,377,2.928,378,2.991,379,2.928,380,4.106,381,2.928,382,2.928,383,2.928,384,2.928]],["title/classes/UpdateUserDto.html",[43,0.079,385,1.896]],["body/classes/UpdateUserDto.html",[3,0.521,4,0.462,5,0.462,17,0.03,29,0.635,42,0.521,43,0.108,72,0.025,73,0.025,157,1.956,169,1.956,236,2.571,266,2.571,268,3.208,340,3.208,385,3.132,386,3.683,387,4.404,388,3.208,389,4.404]],["title/classes/UserEntity.html",[43,0.079,95,1.573]],["body/classes/UserEntity.html",[3,0.303,4,0.269,5,0.269,7,0.339,14,1.34,17,0.031,19,1.031,29,0.441,42,0.303,43,0.063,44,2.417,51,1.798,72,0.018,73,0.018,80,2.802,82,2.092,95,1.806,157,1.137,165,2.568,166,2.333,169,1.137,171,1.806,173,4.087,231,2.851,232,1.495,253,2.851,269,3.68,270,3.68,271,3.68,390,2.141,391,4.4,392,4.4,393,4.4,394,4.834,395,2.561,396,2.561,397,2.561,398,2.561,399,2.561,400,4.834,401,2.561,402,2.561,403,2.561,404,2.561]],["title/controllers/UsersController.html",[74,1.573,405,2.105]],["body/controllers/UsersController.html",[1,0.931,3,0.189,4,0.167,5,0.167,7,0.211,8,0.83,10,0.772,13,1.582,14,0.958,16,1.306,17,0.031,18,1.306,19,0.895,20,1.306,25,1.325,29,0.625,31,1.034,32,1.334,34,0.311,40,2.165,41,1.034,42,0.189,43,0.039,45,1.886,46,1.058,47,1.556,51,1.536,53,2.165,55,1.334,59,1.436,62,1.511,63,1.886,66,1.162,67,1.886,68,1.162,69,1.677,70,1.15,71,1.334,72,0.012,73,0.012,74,0.772,76,0.772,80,2.002,82,1.744,86,2.732,87,1.886,88,1.162,95,2.432,100,1.334,144,1.334,151,2.165,152,2.165,155,3.457,156,1.334,157,0.709,159,2.117,160,1.334,197,2.869,204,1.334,208,1.677,211,1.334,220,0.931,236,1.511,238,2.117,239,1.034,251,1.162,253,3.344,266,2.584,330,1.677,350,1.582,356,1.886,367,2.165,385,2.836,388,1.886,405,1.677,406,1.334,407,3.144,408,2.165,409,2.165,410,1.595,411,1.595,412,1.595,413,1.595,414,2.589,415,1.595,416,1.595,417,1.595,418,2.589,419,1.595,420,1.595,421,1.595,422,1.595,423,1.595,424,1.595,425,1.595,426,1.595,427,1.595,428,1.595,429,1.595,430,1.334,431,1.595,432,1.334,433,3.76,434,2.589,435,1.595,436,1.595,437,1.595,438,1.595,439,1.595,440,1.595,441,1.595,442,1.595,443,1.595,444,1.595,445,1.595,446,1.595,447,1.595,448,1.595,449,1.595,450,1.595,451,2.589,452,1.595,453,1.595,454,1.334,455,1.595,456,1.595,457,1.595,458,1.595]],["title/modules/UsersModule.html",[101,1.128,116,1.722]],["body/modules/UsersModule.html",[3,0.382,4,0.339,5,0.339,17,0.031,29,0.663,34,0.629,42,0.382,43,0.079,72,0.021,73,0.021,76,2.126,101,1.733,103,1.433,104,1.562,105,1.883,106,1.883,107,1.562,108,2.645,109,2.912,114,3.064,116,3.234,117,2.562,118,1.883,119,1.883,121,3.197,181,3.67,182,1.71,183,1.433,350,3.039,405,3.233,430,2.697,459,2.697,460,3.225,461,2.697,462,2.697,463,3.225,464,3.225,465,3.225]],["title/injectables/UsersService.html",[33,0.961,350,1.573]],["body/injectables/UsersService.html",[3,0.23,4,0.204,5,0.204,7,0.257,8,0.971,10,0.94,14,1.118,16,1.582,17,0.031,18,1.582,19,0.898,20,1.582,25,1.461,27,2.453,29,0.539,33,0.896,34,0.379,42,0.358,43,0.048,46,0.793,47,1.963,51,1.972,59,1.582,72,0.014,73,0.014,97,1.029,137,1.029,166,1.605,182,1.029,183,1.866,197,3.806,198,1.624,199,3.514,207,2.205,208,3.266,209,1.624,215,1.624,232,1.133,236,1.767,238,1.962,239,1.258,251,2.205,350,1.466,353,2.532,356,2.711,385,1.767,388,1.415,407,3.514,408,2.532,409,2.532,432,1.624,454,3.81,466,1.415,467,1.942,468,3.027,469,3.721,470,1.942,471,1.942,472,3.027,473,5.04,474,1.942,475,3.027,476,1.942,477,3.027,478,1.942,479,3.027,480,2.711,481,1.624,482,3.027,483,3.027,484,3.721,485,1.942,486,1.942,487,1.942,488,3.721,489,1.942,490,1.942]],["title/coverage.html",[491,3.213]],["body/coverage.html",[0,2.517,1,1.347,5,0.242,6,1.93,13,1.118,17,0.031,19,0.411,33,1.457,37,1.495,38,1.347,43,0.131,70,1.025,72,0.016,73,0.016,74,2.005,75,1.495,77,1.93,89,1.224,95,1.118,107,1.118,129,1.495,138,1.93,142,1.495,143,1.93,148,1.495,153,1.224,159,1.495,168,1.495,170,1.93,178,1.347,183,1.025,196,1.93,220,1.347,221,1.495,263,1.495,266,1.347,267,1.93,268,2.517,298,1.93,299,1.93,326,1.495,328,3.016,330,1.495,333,1.93,334,1.93,338,1.681,347,1.93,350,1.118,369,1.93,374,1.681,375,1.93,378,1.681,385,1.347,386,1.93,390,1.93,405,1.495,406,1.93,466,2.517,480,1.681,491,1.681,492,2.308,493,2.308,494,2.308,495,3.016,496,3.455,497,1.93,498,6.428,499,5.896,500,5.63,501,1.93,502,5.507,503,4.922,504,2.889,505,2.889,506,1.93,507,1.93,508,3.455,509,2.308,510,2.308,511,2.308,512,2.308]],["title/dependencies.html",[104,1.889,513,2.278]],["body/dependencies.html",[17,0.031,34,0.694,35,2.076,36,2.305,41,2.305,43,0.115,72,0.022,73,0.022,104,1.723,126,2.975,157,1.58,182,1.886,183,1.58,185,2.591,187,2.305,207,2.591,232,2.076,290,2.591,311,3.919,360,3.919,361,2.975,514,3.557,515,5.241,516,3.557,517,3.557,518,3.557,519,3.557,520,3.557,521,3.557,522,3.557,523,3.557,524,3.557,525,3.557,526,3.557,527,3.557,528,3.557,529,3.557,530,3.557,531,3.557,532,3.557,533,3.557,534,3.557,535,3.557,536,3.557,537,3.557]],["title/miscellaneous/enumerations.html",[538,1.21,539,3.262]],["body/miscellaneous/enumerations.html",[7,0.567,17,0.03,62,3.08,72,0.025,73,0.025,220,2.501,221,3.419,235,4.413,236,3.08,237,3.844,238,3.419,239,3.419,538,1.904,539,3.584,540,3.584,541,5.125]],["title/miscellaneous/functions.html",[538,1.21,542,3.262]],["body/miscellaneous/functions.html",[7,0.62,17,0.026,72,0.026,73,0.026,107,2.88,495,3.417,497,4.973,507,3.922,538,2.083,542,3.922,543,4.69,544,3.922]],["title/index.html",[7,0.36,545,2.724,546,2.724]],["body/index.html",[4,0.327,17,0.03,72,0.02,73,0.02,94,4.095,237,2.267,291,2.267,491,2.267,547,3.112,548,3.112,549,4.282,550,3.112,551,3.112,552,3.112,553,3.112,554,3.112,555,3.112,556,3.112,557,3.112,558,3.112,559,3.112,560,5.857,561,3.112,562,3.112,563,4.282,564,3.112,565,3.112,566,3.112,567,3.112,568,3.112,569,5.716,570,3.112,571,3.112,572,4.282,573,3.112,574,3.112,575,3.112,576,3.112,577,4.282,578,4.282,579,3.112,580,3.112,581,3.112,582,4.282,583,4.282,584,3.112,585,3.112,586,3.112,587,3.112,588,3.112,589,2.602,590,3.112,591,3.112,592,3.112,593,3.112,594,3.112,595,3.112,596,3.112,597,3.112,598,3.112,599,2.602,600,3.112,601,3.112,602,3.112,603,3.112,604,3.112,605,3.112,606,2.602]],["title/modules.html",[103,1.959]],["body/modules.html",[17,0.025,72,0.025,73,0.025,102,2.838,103,1.945,113,2.556,114,2.322,115,2.556,116,2.322,589,5.029,607,6.013,608,6.013,609,6.166,610,4.38,611,4.38]],["title/overview.html",[612,3.688]],["body/overview.html",[2,2.223,13,2.534,17,0.03,72,0.02,73,0.02,76,1.478,89,2.57,101,1.06,102,4.029,103,1.356,104,1.478,105,1.781,106,1.781,107,1.478,108,1.618,109,1.781,110,2.552,111,2.552,112,2.552,113,3.519,114,2.912,115,2.829,116,3.196,117,2.466,118,1.781,119,1.781,137,1.618,153,2.57,169,1.356,175,2.552,176,2.552,178,2.829,258,2.552,259,2.552,326,1.978,350,2.821,459,2.552,461,2.552,462,2.552,612,2.552,613,4.226,614,3.052,615,3.052,616,3.052,617,3.052]],["title/properties.html",[171,1.889,513,2.278]],["body/properties.html",[17,0.03,72,0.026,73,0.026,171,2.219,182,2.429,183,2.035,291,3.338,599,3.832,606,3.832,618,4.582,619,4.582,620,4.582,621,4.582,622,4.582,623,4.582,624,4.582]],["title/miscellaneous/typealiases.html",[538,1.21,625,3.901]],["body/miscellaneous/typealiases.html",[7,0.599,17,0.029,19,0.807,72,0.026,73,0.026,95,2.194,220,2.644,221,3.796,227,3.788,229,3.788,240,3.976,241,4.565,538,2.012,540,4.565,626,4.529]],["title/miscellaneous/variables.html",[538,1.21,627,3.262]],["body/miscellaneous/variables.html",[7,0.413,17,0.031,19,0.987,37,2.782,38,1.823,60,2.024,70,1.388,72,0.02,73,0.02,82,1.704,159,2.782,183,1.907,231,2.024,328,2.276,330,3.179,331,3.591,332,2.613,338,3.128,343,2.613,378,3.128,466,2.276,480,3.128,481,3.591,495,2.276,501,3.591,504,2.613,505,2.613,506,4.632,538,1.388,541,5.068,544,3.591,627,2.613,628,4.294,629,4.294,630,4.294,631,3.124,632,6.059,633,3.124,634,3.124,635,4.294,636,3.124]]],"invertedIndex":[["",{"_index":17,"title":{},"body":{"guards/AbilitiesGuard.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthEntity.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CaslAbilityFactory.html":{},"modules/CaslModule.html":{},"modules/CommonModule.html":{},"classes/CreateUserDto.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IAbilityMeta.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"guards/RolesGuard.html":{},"classes/UpdateUserDto.html":{},"classes/UserEntity.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":498,"title":{},"body":{"coverage.html":{}}}],["0.1.13",{"_index":533,"title":{},"body":{"dependencies.html":{}}}],["0.14.0",{"_index":527,"title":{},"body":{"dependencies.html":{}}}],["0.20.0",{"_index":528,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":526,"title":{},"body":{"dependencies.html":{}}}],["0.6.0",{"_index":529,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":499,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":509,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":503,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":502,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":508,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":510,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":617,"title":{},"body":{"overview.html":{}}}],["1.0.0",{"_index":619,"title":{},"body":{"properties.html":{}}}],["10",{"_index":481,"title":{},"body":{"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["10.0.0",{"_index":520,"title":{},"body":{"dependencies.html":{}}}],["10.1.0",{"_index":517,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":616,"title":{},"body":{"overview.html":{}}}],["3",{"_index":614,"title":{},"body":{"overview.html":{}}}],["3.0.0",{"_index":516,"title":{},"body":{"dependencies.html":{}}}],["4.0.1",{"_index":530,"title":{},"body":{"dependencies.html":{}}}],["4.15.0",{"_index":523,"title":{},"body":{"dependencies.html":{}}}],["4.6.3",{"_index":537,"title":{},"body":{"dependencies.html":{}}}],["5",{"_index":613,"title":{},"body":{"overview.html":{}}}],["5.1.0",{"_index":524,"title":{},"body":{"dependencies.html":{}}}],["5m",{"_index":195,"title":{},"body":{"modules/AuthModule.html":{}}}],["6.3.0",{"_index":522,"title":{},"body":{"dependencies.html":{}}}],["6.5.0",{"_index":514,"title":{},"body":{"dependencies.html":{}}}],["7",{"_index":615,"title":{},"body":{"overview.html":{}}}],["7.2.0",{"_index":534,"title":{},"body":{"dependencies.html":{}}}],["9.0.0",{"_index":515,"title":{},"body":{"dependencies.html":{}}}],["abilities",{"_index":330,"title":{},"body":{"interfaces/IAbilityMeta.html":{},"controllers/UsersController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["abilitiesguard",{"_index":1,"title":{"guards/AbilitiesGuard.html":{}},"body":{"guards/AbilitiesGuard.html":{},"modules/AppModule.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["ability",{"_index":53,"title":{},"body":{"guards/AbilitiesGuard.html":{},"controllers/UsersController.html":{}}}],["ability.can(action",{"_index":65,"title":{},"body":{"guards/AbilitiesGuard.html":{}}}],["ability.factory",{"_index":31,"title":{},"body":{"guards/AbilitiesGuard.html":{},"modules/CaslModule.html":{},"interfaces/IAbilityMeta.html":{},"controllers/UsersController.html":{}}}],["ability.factory.ts",{"_index":221,"title":{},"body":{"classes/CaslAbilityFactory.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["ability.factory.ts:25",{"_index":224,"title":{},"body":{"classes/CaslAbilityFactory.html":{}}}],["ability_key",{"_index":37,"title":{},"body":{"guards/AbilitiesGuard.html":{},"interfaces/IAbilityMeta.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["abilitybuilder",{"_index":225,"title":{},"body":{"classes/CaslAbilityFactory.html":{}}}],["abilitybuilder(createmongoability",{"_index":243,"title":{},"body":{"classes/CaslAbilityFactory.html":{}}}],["abilityclass",{"_index":228,"title":{},"body":{"classes/CaslAbilityFactory.html":{}}}],["accessguard",{"_index":91,"title":{},"body":{"controllers/AppController.html":{}}}],["accesstoken",{"_index":172,"title":{},"body":{"classes/AuthEntity.html":{},"injectables/AuthService.html":{}}}],["action",{"_index":62,"title":{},"body":{"guards/AbilitiesGuard.html":{},"classes/CaslAbilityFactory.html":{},"interfaces/IAbilityMeta.html":{},"controllers/UsersController.html":{},"miscellaneous/enumerations.html":{}}}],["action.delete",{"_index":456,"title":{},"body":{"controllers/UsersController.html":{}}}],["actions",{"_index":92,"title":{},"body":{"controllers/AppController.html":{}}}],["aliases",{"_index":626,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["amazing",{"_index":590,"title":{},"body":{"index.html":{}}}],["api",{"_index":620,"title":{},"body":{"properties.html":{}}}],["apibearerauth",{"_index":433,"title":{},"body":{"controllers/UsersController.html":{}}}],["apicreatedresponse",{"_index":434,"title":{},"body":{"controllers/UsersController.html":{}}}],["apiokresponse",{"_index":155,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["apiproperty",{"_index":173,"title":{},"body":{"classes/AuthEntity.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/UserEntity.html":{}}}],["apiproperty({description",{"_index":272,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["apitags",{"_index":156,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["apitags('auth",{"_index":162,"title":{},"body":{"controllers/AuthController.html":{}}}],["apitags('users",{"_index":439,"title":{},"body":{"controllers/UsersController.html":{}}}],["app",{"_index":567,"title":{},"body":{"index.html":{}}}],["app.controller",{"_index":122,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":90,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["app_filter",{"_index":262,"title":{},"body":{"modules/CommonModule.html":{}}}],["app_guard",{"_index":135,"title":{},"body":{"modules/AppModule.html":{}}}],["appability",{"_index":241,"title":{},"body":{"classes/CaslAbilityFactory.html":{},"miscellaneous/typealiases.html":{}}}],["appcontroller",{"_index":75,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applications",{"_index":555,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":102,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":89,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["args",{"_index":331,"title":{},"body":{"interfaces/IAbilityMeta.html":{},"miscellaneous/variables.html":{}}}],["argumentshost",{"_index":304,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["async",{"_index":197,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["auth",{"_index":145,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth.controller",{"_index":180,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.guard",{"_index":131,"title":{},"body":{"modules/AppModule.html":{}}}],["auth.guard.ts",{"_index":334,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["auth.guard.ts:13",{"_index":336,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["auth.guard.ts:8",{"_index":335,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["auth.service",{"_index":154,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["auth/auth.module",{"_index":127,"title":{},"body":{"modules/AppModule.html":{}}}],["auth/guards/jwt",{"_index":130,"title":{},"body":{"modules/AppModule.html":{}}}],["authcontroller",{"_index":142,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authentity",{"_index":168,"title":{"classes/AuthEntity.html":{}},"body":{"classes/AuthEntity.html":{},"injectables/AuthService.html":{},"coverage.html":{}}}],["authguard",{"_index":337,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["authguard('jwt",{"_index":341,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["authmodule",{"_index":113,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":599,"title":{},"body":{"index.html":{},"properties.html":{}}}],["authservice",{"_index":153,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"coverage.html":{},"overview.html":{}}}],["available",{"_index":611,"title":{},"body":{"modules.html":{}}}],["await",{"_index":208,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["backers",{"_index":591,"title":{},"body":{"index.html":{}}}],["badrequestexception",{"_index":429,"title":{},"body":{"controllers/UsersController.html":{}}}],["bcrypt",{"_index":207,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["bcrypt.compare(password",{"_index":214,"title":{},"body":{"injectables/AuthService.html":{}}}],["bcrypt.hash(data.password",{"_index":483,"title":{},"body":{"injectables/UsersService.html":{}}}],["body",{"_index":151,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["boolean",{"_index":26,"title":{},"body":{"guards/AbilitiesGuard.html":{},"injectables/JwtAuthGuard.html":{},"guards/RolesGuard.html":{}}}],["bootstrap",{"_index":107,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CaslModule.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":609,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":607,"title":{},"body":{"modules.html":{}}}],["build",{"_index":242,"title":{},"body":{"classes/CaslAbilityFactory.html":{}}}],["building",{"_index":550,"title":{},"body":{"index.html":{}}}],["built",{"_index":622,"title":{},"body":{"properties.html":{}}}],["can(action.manage",{"_index":246,"title":{},"body":{"classes/CaslAbilityFactory.html":{}}}],["can(action.read",{"_index":247,"title":{},"body":{"classes/CaslAbilityFactory.html":{}}}],["can(action.update",{"_index":248,"title":{},"body":{"classes/CaslAbilityFactory.html":{}}}],["canactivate",{"_index":9,"title":{},"body":{"guards/AbilitiesGuard.html":{},"injectables/JwtAuthGuard.html":{},"guards/RolesGuard.html":{}}}],["canactivate(context",{"_index":21,"title":{},"body":{"guards/AbilitiesGuard.html":{},"injectables/JwtAuthGuard.html":{},"guards/RolesGuard.html":{}}}],["cannot(action.delete",{"_index":249,"title":{},"body":{"classes/CaslAbilityFactory.html":{}}}],["cannot(action.update",{"_index":252,"title":{},"body":{"classes/CaslAbilityFactory.html":{}}}],["casl",{"_index":30,"title":{},"body":{"guards/AbilitiesGuard.html":{},"controllers/AppController.html":{},"modules/CaslModule.html":{},"interfaces/IAbilityMeta.html":{}}}],["casl/ability",{"_index":41,"title":{},"body":{"guards/AbilitiesGuard.html":{},"classes/CaslAbilityFactory.html":{},"controllers/UsersController.html":{},"dependencies.html":{}}}],["casl/casl.module",{"_index":128,"title":{},"body":{"modules/AppModule.html":{}}}],["casl/guards/abilities.guard",{"_index":132,"title":{},"body":{"modules/AppModule.html":{}}}],["caslabilityfactory",{"_index":13,"title":{"classes/CaslAbilityFactory.html":{}},"body":{"guards/AbilitiesGuard.html":{},"classes/CaslAbilityFactory.html":{},"modules/CaslModule.html":{},"controllers/UsersController.html":{},"coverage.html":{},"overview.html":{}}}],["caslmodule",{"_index":114,"title":{"modules/CaslModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CaslModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["catch",{"_index":66,"title":{},"body":{"guards/AbilitiesGuard.html":{},"classes/HttpExceptionFilter.html":{},"controllers/UsersController.html":{}}}],["catch(exception",{"_index":301,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["class",{"_index":43,"title":{"classes/AuthEntity.html":{},"classes/CaslAbilityFactory.html":{},"classes/CreateUserDto.html":{},"classes/HttpExceptionFilter.html":{},"classes/LoginDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserEntity.html":{}},"body":{"guards/AbilitiesGuard.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthEntity.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CaslAbilityFactory.html":{},"modules/CaslModule.html":{},"modules/CommonModule.html":{},"classes/CreateUserDto.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"guards/RolesGuard.html":{},"classes/UpdateUserDto.html":{},"classes/UserEntity.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":169,"title":{},"body":{"classes/AuthEntity.html":{},"classes/CaslAbilityFactory.html":{},"classes/CreateUserDto.html":{},"classes/HttpExceptionFilter.html":{},"classes/LoginDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserEntity.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":110,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":111,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":112,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":175,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":177,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":176,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_caslmodule",{"_index":258,"title":{},"body":{"modules/CaslModule.html":{},"overview.html":{}}}],["cluster_caslmodule_exports",{"_index":259,"title":{},"body":{"modules/CaslModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":459,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_exports",{"_index":462,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_imports",{"_index":460,"title":{},"body":{"modules/UsersModule.html":{}}}],["cluster_usersmodule_providers",{"_index":461,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["common/common.module",{"_index":124,"title":{},"body":{"modules/AppModule.html":{}}}],["common/decorators/public.decorator",{"_index":339,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["commonmodule",{"_index":115,"title":{"modules/CommonModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CommonModule.html":{},"modules.html":{},"overview.html":{}}}],["compose",{"_index":564,"title":{},"body":{"index.html":{}}}],["configmodule",{"_index":125,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":133,"title":{},"body":{"modules/AppModule.html":{}}}],["console.log(user",{"_index":442,"title":{},"body":{"controllers/UsersController.html":{}}}],["const",{"_index":47,"title":{},"body":{"guards/AbilitiesGuard.html":{},"injectables/AuthService.html":{},"classes/CaslAbilityFactory.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IAbilityMeta.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"guards/RolesGuard.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["constructor",{"_index":10,"title":{},"body":{"guards/AbilitiesGuard.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"guards/RolesGuard.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["constructor(prisma",{"_index":198,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["constructor(private",{"_index":97,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"guards/RolesGuard.html":{},"injectables/UsersService.html":{}}}],["constructor(reflector",{"_index":11,"title":{},"body":{"guards/AbilitiesGuard.html":{},"injectables/JwtAuthGuard.html":{},"guards/RolesGuard.html":{}}}],["constructor(usersservice",{"_index":349,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["context",{"_index":24,"title":{},"body":{"guards/AbilitiesGuard.html":{},"injectables/JwtAuthGuard.html":{},"guards/RolesGuard.html":{}}}],["context.getclass",{"_index":345,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"guards/RolesGuard.html":{}}}],["context.gethandler",{"_index":50,"title":{},"body":{"guards/AbilitiesGuard.html":{},"injectables/JwtAuthGuard.html":{},"guards/RolesGuard.html":{}}}],["context.switchtohttp().getrequest",{"_index":382,"title":{},"body":{"guards/RolesGuard.html":{}}}],["context.switchtohttp().getrequest().user",{"_index":52,"title":{},"body":{"guards/AbilitiesGuard.html":{}}}],["controller",{"_index":74,"title":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/UsersController.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["controller('auth",{"_index":161,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('users",{"_index":438,"title":{},"body":{"controllers/UsersController.html":{}}}],["controllers",{"_index":76,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["coverage",{"_index":491,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":236,"title":{},"body":{"classes/CaslAbilityFactory.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{}}}],["create(@body",{"_index":440,"title":{},"body":{"controllers/UsersController.html":{}}}],["create(createuserdto",{"_index":410,"title":{},"body":{"controllers/UsersController.html":{}}}],["create(data",{"_index":468,"title":{},"body":{"injectables/UsersService.html":{}}}],["createdat",{"_index":391,"title":{},"body":{"classes/UserEntity.html":{}}}],["createforuser",{"_index":222,"title":{},"body":{"classes/CaslAbilityFactory.html":{}}}],["createforuser(user",{"_index":223,"title":{},"body":{"classes/CaslAbilityFactory.html":{}}}],["createmongoability",{"_index":230,"title":{},"body":{"classes/CaslAbilityFactory.html":{}}}],["createuserdto",{"_index":266,"title":{"classes/CreateUserDto.html":{}},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["ctx",{"_index":312,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["ctx.getresponse",{"_index":314,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["data",{"_index":454,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["data.password",{"_index":484,"title":{},"body":{"injectables/UsersService.html":{}}}],["date",{"_index":394,"title":{},"body":{"classes/UserEntity.html":{}}}],["date().toisostring",{"_index":325,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["declarations",{"_index":106,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CaslModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["decorators",{"_index":80,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/AuthEntity.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/UserEntity.html":{},"controllers/UsersController.html":{}}}],["decorators/abilities.decorator",{"_index":39,"title":{},"body":{"guards/AbilitiesGuard.html":{}}}],["decorators/roles.decorator",{"_index":379,"title":{},"body":{"guards/RolesGuard.html":{}}}],["default",{"_index":632,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defined",{"_index":14,"title":{},"body":{"guards/AbilitiesGuard.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthEntity.html":{},"injectables/AuthService.html":{},"classes/CaslAbilityFactory.html":{},"classes/CreateUserDto.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"guards/RolesGuard.html":{},"classes/UserEntity.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["delete",{"_index":239,"title":{},"body":{"classes/CaslAbilityFactory.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{}}}],["delete(':id",{"_index":455,"title":{},"body":{"controllers/UsersController.html":{}}}],["delete(':id')@apiokresponse({type",{"_index":421,"title":{},"body":{"controllers/UsersController.html":{}}}],["dependencies",{"_index":104,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CaslModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":291,"title":{},"body":{"classes/CreateUserDto.html":{},"index.html":{},"properties.html":{}}}],["detectsubjecttype",{"_index":255,"title":{},"body":{"classes/CaslAbilityFactory.html":{}}}],["development",{"_index":568,"title":{},"body":{"index.html":{}}}],["docker",{"_index":563,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":492,"title":{},"body":{"coverage.html":{}}}],["dto/create",{"_index":431,"title":{},"body":{"controllers/UsersController.html":{}}}],["dto/login.dto",{"_index":158,"title":{},"body":{"controllers/AuthController.html":{}}}],["dto/update",{"_index":432,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["e2e",{"_index":579,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":551,"title":{},"body":{"index.html":{}}}],["emai",{"_index":212,"title":{},"body":{"injectables/AuthService.html":{}}}],["email",{"_index":165,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/UserEntity.html":{}}}],["entities/user.entity",{"_index":435,"title":{},"body":{"controllers/UsersController.html":{}}}],["entity/auth.entity",{"_index":206,"title":{},"body":{"injectables/AuthService.html":{}}}],["enum",{"_index":234,"title":{},"body":{"classes/CaslAbilityFactory.html":{}}}],["enumerations",{"_index":539,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["error",{"_index":67,"title":{},"body":{"guards/AbilitiesGuard.html":{},"classes/HttpExceptionFilter.html":{},"controllers/UsersController.html":{}}}],["exception",{"_index":306,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["exception.filter",{"_index":265,"title":{},"body":{"modules/CommonModule.html":{}}}],["exception.filter.ts",{"_index":299,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"coverage.html":{}}}],["exception.filter.ts:14",{"_index":305,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["exception.getresponse",{"_index":319,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["exception.getstatus",{"_index":316,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["exceptionfilter",{"_index":300,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["exceptionresponse",{"_index":318,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["executioncontext",{"_index":22,"title":{},"body":{"guards/AbilitiesGuard.html":{},"injectables/JwtAuthGuard.html":{},"guards/RolesGuard.html":{}}}],["expiresin",{"_index":194,"title":{},"body":{"modules/AuthModule.html":{}}}],["export",{"_index":42,"title":{},"body":{"guards/AbilitiesGuard.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthEntity.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CaslAbilityFactory.html":{},"modules/CaslModule.html":{},"modules/CommonModule.html":{},"classes/CreateUserDto.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IAbilityMeta.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"guards/RolesGuard.html":{},"classes/UpdateUserDto.html":{},"classes/UserEntity.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["exports",{"_index":109,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CaslModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["express",{"_index":311,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"dependencies.html":{}}}],["extends",{"_index":340,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/UpdateUserDto.html":{}}}],["extractjwt",{"_index":358,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":365,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractsubjecttype",{"_index":226,"title":{},"body":{"classes/CaslAbilityFactory.html":{}}}],["file",{"_index":5,"title":{},"body":{"guards/AbilitiesGuard.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthEntity.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CaslAbilityFactory.html":{},"modules/CaslModule.html":{},"modules/CommonModule.html":{},"classes/CreateUserDto.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IAbilityMeta.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"guards/RolesGuard.html":{},"classes/UpdateUserDto.html":{},"classes/UserEntity.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["filters/http",{"_index":264,"title":{},"body":{"modules/CommonModule.html":{}}}],["findall",{"_index":407,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["findone",{"_index":408,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["findone(@param('id",{"_index":446,"title":{},"body":{"controllers/UsersController.html":{}}}],["findone(id",{"_index":416,"title":{},"body":{"controllers/UsersController.html":{}}}],["findone(where",{"_index":472,"title":{},"body":{"injectables/UsersService.html":{}}}],["forbiddenerror",{"_index":40,"title":{},"body":{"guards/AbilitiesGuard.html":{},"controllers/UsersController.html":{}}}],["forbiddenerror.from(ability).throwunlesscan(action.update",{"_index":452,"title":{},"body":{"controllers/UsersController.html":{}}}],["forbiddenerror.from(ability).throwunlesscan(rule.action",{"_index":57,"title":{},"body":{"guards/AbilitiesGuard.html":{}}}],["forbiddenexception",{"_index":32,"title":{},"body":{"guards/AbilitiesGuard.html":{},"controllers/UsersController.html":{}}}],["forbiddenexception(error.message",{"_index":71,"title":{},"body":{"guards/AbilitiesGuard.html":{},"controllers/UsersController.html":{}}}],["found",{"_index":211,"title":{},"body":{"injectables/AuthService.html":{},"controllers/UsersController.html":{}}}],["framework",{"_index":549,"title":{},"body":{"index.html":{}}}],["fullname",{"_index":269,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UserEntity.html":{}}}],["function",{"_index":496,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":542,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["get(':id",{"_index":445,"title":{},"body":{"controllers/UsersController.html":{}}}],["get(':id')@apiokresponse({type",{"_index":417,"title":{},"body":{"controllers/UsersController.html":{}}}],["get('profile",{"_index":84,"title":{},"body":{"controllers/AppController.html":{}}}],["get()@public()@apiokresponse({type",{"_index":413,"title":{},"body":{"controllers/UsersController.html":{}}}],["gethello",{"_index":78,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getprofile",{"_index":79,"title":{},"body":{"controllers/AppController.html":{}}}],["getprofile(@request",{"_index":99,"title":{},"body":{"controllers/AppController.html":{}}}],["getprofile(req",{"_index":83,"title":{},"body":{"controllers/AppController.html":{}}}],["getting",{"_index":545,"title":{"index.html":{}},"body":{}}],["graph",{"_index":610,"title":{},"body":{"modules.html":{}}}],["grow",{"_index":586,"title":{},"body":{"index.html":{}}}],["guard",{"_index":0,"title":{"guards/AbilitiesGuard.html":{},"guards/RolesGuard.html":{}},"body":{"coverage.html":{}}}],["guards",{"_index":2,"title":{},"body":{"guards/AbilitiesGuard.html":{},"guards/RolesGuard.html":{},"overview.html":{}}}],["hashedpassword",{"_index":482,"title":{},"body":{"injectables/UsersService.html":{}}}],["hello",{"_index":140,"title":{},"body":{"injectables/AppService.html":{}}}],["here",{"_index":596,"title":{},"body":{"index.html":{}}}],["host",{"_index":303,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["host.switchtohttp",{"_index":313,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["httpexception",{"_index":308,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["httpexceptionfilter",{"_index":263,"title":{"classes/HttpExceptionFilter.html":{}},"body":{"modules/CommonModule.html":{},"classes/HttpExceptionFilter.html":{},"coverage.html":{}}}],["https://nestjs.com",{"_index":603,"title":{},"body":{"index.html":{}}}],["httpstatus",{"_index":309,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["httpstatus.internal_server_error",{"_index":317,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["iabilitymeta",{"_index":38,"title":{"interfaces/IAbilityMeta.html":{}},"body":{"guards/AbilitiesGuard.html":{},"interfaces/IAbilityMeta.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["id",{"_index":253,"title":{},"body":{"classes/CaslAbilityFactory.html":{},"injectables/JwtStrategy.html":{},"classes/UserEntity.html":{},"controllers/UsersController.html":{}}}],["identifier",{"_index":493,"title":{},"body":{"coverage.html":{}}}],["implements",{"_index":44,"title":{},"body":{"guards/AbilitiesGuard.html":{},"classes/HttpExceptionFilter.html":{},"guards/RolesGuard.html":{},"classes/UserEntity.html":{}}}],["import",{"_index":29,"title":{},"body":{"guards/AbilitiesGuard.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthEntity.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CaslAbilityFactory.html":{},"modules/CaslModule.html":{},"modules/CommonModule.html":{},"classes/CreateUserDto.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IAbilityMeta.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"guards/RolesGuard.html":{},"classes/UpdateUserDto.html":{},"classes/UserEntity.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["imports",{"_index":121,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"guards/AbilitiesGuard.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthEntity.html":{},"injectables/AuthService.html":{},"classes/CaslAbilityFactory.html":{},"classes/CreateUserDto.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IAbilityMeta.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"guards/RolesGuard.html":{},"classes/UserEntity.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["infersubjects",{"_index":227,"title":{},"body":{"classes/CaslAbilityFactory.html":{},"miscellaneous/typealiases.html":{}}}],["info",{"_index":3,"title":{},"body":{"guards/AbilitiesGuard.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthEntity.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CaslAbilityFactory.html":{},"modules/CaslModule.html":{},"modules/CommonModule.html":{},"classes/CreateUserDto.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IAbilityMeta.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"guards/RolesGuard.html":{},"classes/UpdateUserDto.html":{},"classes/UserEntity.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["injectable",{"_index":33,"title":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/UsersService.html":{}},"body":{"guards/AbilitiesGuard.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"guards/RolesGuard.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["injectables",{"_index":137,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["installation",{"_index":559,"title":{},"body":{"index.html":{}}}],["installdatabase",{"_index":561,"title":{},"body":{"index.html":{}}}],["instanceof",{"_index":68,"title":{},"body":{"guards/AbilitiesGuard.html":{},"classes/HttpExceptionFilter.html":{},"controllers/UsersController.html":{}}}],["interface",{"_index":326,"title":{"interfaces/IAbilityMeta.html":{}},"body":{"interfaces/IAbilityMeta.html":{},"coverage.html":{},"overview.html":{}}}],["interfaces",{"_index":327,"title":{},"body":{"interfaces/IAbilityMeta.html":{}}}],["is_public_key",{"_index":338,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["isemail",{"_index":283,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginDto.html":{}}}],["isemail()@isnotempty()@apiproperty",{"_index":370,"title":{},"body":{"classes/LoginDto.html":{}}}],["isnotempty",{"_index":284,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginDto.html":{}}}],["isoptional",{"_index":285,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isoptional()@isphonenumber('vn",{"_index":279,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isoptional()@isstring()@minlength(6)@maxlength(25",{"_index":281,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["ispasswordvalid",{"_index":213,"title":{},"body":{"injectables/AuthService.html":{}}}],["isphonenumber",{"_index":286,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isphonenumber('vn",{"_index":297,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["ispublic",{"_index":343,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"miscellaneous/variables.html":{}}}],["isstring",{"_index":287,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginDto.html":{}}}],["isstring()@isnotempty()@minlength(6)@apiproperty",{"_index":372,"title":{},"body":{"classes/LoginDto.html":{}}}],["item",{"_index":256,"title":{},"body":{"classes/CaslAbilityFactory.html":{}}}],["item.constructor",{"_index":257,"title":{},"body":{"classes/CaslAbilityFactory.html":{}}}],["join",{"_index":593,"title":{},"body":{"index.html":{}}}],["jwt",{"_index":361,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["jwt.strategy",{"_index":188,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtauthguard",{"_index":129,"title":{"injectables/JwtAuthGuard.html":{}},"body":{"modules/AppModule.html":{},"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["jwtfromrequest",{"_index":364,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":184,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.register",{"_index":190,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtservice",{"_index":200,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtstrategy",{"_index":178,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["kamil",{"_index":600,"title":{},"body":{"index.html":{}}}],["legend",{"_index":105,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CaslModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["license",{"_index":606,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":583,"title":{},"body":{"index.html":{}}}],["literal",{"_index":353,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/UsersService.html":{}}}],["login",{"_index":146,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["login(@body",{"_index":164,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(email",{"_index":202,"title":{},"body":{"injectables/AuthService.html":{}}}],["login(undefined",{"_index":147,"title":{},"body":{"controllers/AuthController.html":{}}}],["logindto",{"_index":148,"title":{"classes/LoginDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/LoginDto.html":{},"coverage.html":{}}}],["main",{"_index":497,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["manage",{"_index":235,"title":{},"body":{"classes/CaslAbilityFactory.html":{},"miscellaneous/enumerations.html":{}}}],["matching",{"_index":73,"title":{},"body":{"guards/AbilitiesGuard.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthEntity.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CaslAbilityFactory.html":{},"modules/CaslModule.html":{},"modules/CommonModule.html":{},"classes/CreateUserDto.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IAbilityMeta.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"guards/RolesGuard.html":{},"classes/UpdateUserDto.html":{},"classes/UserEntity.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["maxlength",{"_index":288,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["maxlength(100",{"_index":293,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["maxlength(25",{"_index":296,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["maxlength(50",{"_index":295,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["message",{"_index":321,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["metadata",{"_index":532,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":8,"title":{},"body":{"guards/AbilitiesGuard.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CaslAbilityFactory.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"guards/RolesGuard.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["minlength",{"_index":289,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginDto.html":{}}}],["minlength(6",{"_index":294,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginDto.html":{}}}],["minlength(8",{"_index":292,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["miscellaneous",{"_index":538,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":582,"title":{},"body":{"index.html":{}}}],["mode",{"_index":572,"title":{},"body":{"index.html":{}}}],["module",{"_index":101,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CaslModule.html":{},"modules/CommonModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CaslModule.html":{},"modules/CommonModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["modules",{"_index":103,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CaslModule.html":{},"modules/CommonModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["mongoability",{"_index":229,"title":{},"body":{"classes/CaslAbilityFactory.html":{},"miscellaneous/typealiases.html":{}}}],["more",{"_index":595,"title":{},"body":{"index.html":{}}}],["myśliwiec",{"_index":601,"title":{},"body":{"index.html":{}}}],["name",{"_index":18,"title":{},"body":{"guards/AbilitiesGuard.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CaslAbilityFactory.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"guards/RolesGuard.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["ne",{"_index":254,"title":{},"body":{"classes/CaslAbilityFactory.html":{}}}],["nest",{"_index":94,"title":{},"body":{"controllers/AppController.html":{},"index.html":{}}}],["nestframework",{"_index":605,"title":{},"body":{"index.html":{}}}],["nestjs",{"_index":182,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{},"properties.html":{}}}],["nestjs/common",{"_index":34,"title":{},"body":{"guards/AbilitiesGuard.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CaslModule.html":{},"modules/CommonModule.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IAbilityMeta.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"guards/RolesGuard.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":126,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":35,"title":{},"body":{"guards/AbilitiesGuard.html":{},"modules/CommonModule.html":{},"injectables/JwtAuthGuard.html":{},"guards/RolesGuard.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":185,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/mapped",{"_index":518,"title":{},"body":{"dependencies.html":{}}}],["nestjs/passport",{"_index":187,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":521,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":157,"title":{},"body":{"controllers/AuthController.html":{},"classes/AuthEntity.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserEntity.html":{},"controllers/UsersController.html":{},"dependencies.html":{}}}],["new",{"_index":70,"title":{},"body":{"guards/AbilitiesGuard.html":{},"injectables/AuthService.html":{},"classes/CaslAbilityFactory.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtStrategy.html":{},"controllers/UsersController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["node.js",{"_index":548,"title":{},"body":{"index.html":{}}}],["notfoundexception",{"_index":204,"title":{},"body":{"injectables/AuthService.html":{},"controllers/UsersController.html":{}}}],["notfoundexception(`${id",{"_index":447,"title":{},"body":{"controllers/UsersController.html":{}}}],["notfoundexception(`user",{"_index":210,"title":{},"body":{"injectables/AuthService.html":{}}}],["null",{"_index":400,"title":{},"body":{"classes/UserEntity.html":{}}}],["number",{"_index":635,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object",{"_index":322,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["observable",{"_index":28,"title":{},"body":{"guards/AbilitiesGuard.html":{},"injectables/JwtAuthGuard.html":{},"guards/RolesGuard.html":{}}}],["open",{"_index":584,"title":{},"body":{"index.html":{}}}],["optional",{"_index":20,"title":{},"body":{"guards/AbilitiesGuard.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CaslAbilityFactory.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"guards/RolesGuard.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["out",{"_index":119,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CaslModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["overview",{"_index":612,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":513,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["param",{"_index":428,"title":{},"body":{"controllers/UsersController.html":{}}}],["param('id",{"_index":449,"title":{},"body":{"controllers/UsersController.html":{}}}],["parameters",{"_index":16,"title":{},"body":{"guards/AbilitiesGuard.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CaslAbilityFactory.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"guards/RolesGuard.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["params",{"_index":479,"title":{},"body":{"injectables/UsersService.html":{}}}],["partialtype",{"_index":387,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["partialtype(createuserdto",{"_index":389,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["passport",{"_index":360,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":186,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":357,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["passportstrategy(strategy",{"_index":363,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["password",{"_index":166,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/UserEntity.html":{},"injectables/UsersService.html":{}}}],["patch",{"_index":427,"title":{},"body":{"controllers/UsersController.html":{}}}],["patch(':id",{"_index":448,"title":{},"body":{"controllers/UsersController.html":{}}}],["patch(':id')@apiokresponse({type",{"_index":425,"title":{},"body":{"controllers/UsersController.html":{}}}],["payload",{"_index":355,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payload.userid",{"_index":368,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["phone",{"_index":270,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UserEntity.html":{}}}],["please",{"_index":594,"title":{},"body":{"index.html":{}}}],["pnpm",{"_index":560,"title":{},"body":{"index.html":{}}}],["post",{"_index":152,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["post('login",{"_index":163,"title":{},"body":{"controllers/AuthController.html":{}}}],["post()@public()@apicreatedresponse({type",{"_index":411,"title":{},"body":{"controllers/UsersController.html":{}}}],["prefix",{"_index":144,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["prisma",{"_index":183,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["prisma.usercreateinput",{"_index":469,"title":{},"body":{"injectables/UsersService.html":{}}}],["prisma.userwhereuniqueinput",{"_index":473,"title":{},"body":{"injectables/UsersService.html":{}}}],["prisma/.../seed.ts",{"_index":544,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["prisma/client",{"_index":232,"title":{},"body":{"classes/CaslAbilityFactory.html":{},"guards/RolesGuard.html":{},"classes/UserEntity.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["prisma/seed.ts",{"_index":495,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["prismaclient",{"_index":634,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prismamodule",{"_index":181,"title":{},"body":{"modules/AuthModule.html":{},"modules/UsersModule.html":{}}}],["prismaservice",{"_index":199,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["private",{"_index":45,"title":{},"body":{"guards/AbilitiesGuard.html":{},"injectables/AuthService.html":{},"controllers/UsersController.html":{}}}],["process.env.jwt_secret",{"_index":192,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["production",{"_index":574,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":547,"title":{},"body":{"index.html":{}}}],["project",{"_index":585,"title":{},"body":{"index.html":{}}}],["promise",{"_index":27,"title":{},"body":{"guards/AbilitiesGuard.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"guards/RolesGuard.html":{},"injectables/UsersService.html":{}}}],["properties",{"_index":171,"title":{"properties.html":{}},"body":{"classes/AuthEntity.html":{},"classes/CreateUserDto.html":{},"interfaces/IAbilityMeta.html":{},"classes/LoginDto.html":{},"classes/UserEntity.html":{},"properties.html":{}}}],["provide",{"_index":134,"title":{},"body":{"modules/AppModule.html":{},"modules/CommonModule.html":{}}}],["providers",{"_index":108,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CaslModule.html":{},"modules/CommonModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["public",{"_index":159,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UsersController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["public()@post('login')@apiokresponse({type",{"_index":149,"title":{},"body":{"controllers/AuthController.html":{}}}],["read",{"_index":237,"title":{},"body":{"classes/CaslAbilityFactory.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["readonly",{"_index":46,"title":{},"body":{"guards/AbilitiesGuard.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"guards/RolesGuard.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["reflect",{"_index":531,"title":{},"body":{"dependencies.html":{}}}],["reflector",{"_index":12,"title":{},"body":{"guards/AbilitiesGuard.html":{},"injectables/JwtAuthGuard.html":{},"guards/RolesGuard.html":{}}}],["remove",{"_index":409,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["remove(@param('id",{"_index":457,"title":{},"body":{"controllers/UsersController.html":{}}}],["remove(id",{"_index":420,"title":{},"body":{"controllers/UsersController.html":{}}}],["remove(where",{"_index":475,"title":{},"body":{"injectables/UsersService.html":{}}}],["repository",{"_index":558,"title":{},"body":{"index.html":{}}}],["req",{"_index":86,"title":{},"body":{"controllers/AppController.html":{},"controllers/UsersController.html":{}}}],["req.user",{"_index":100,"title":{},"body":{"controllers/AppController.html":{},"controllers/UsersController.html":{}}}],["request",{"_index":87,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["requiredroles",{"_index":380,"title":{},"body":{"guards/RolesGuard.html":{}}}],["requiredroles.some((role",{"_index":383,"title":{},"body":{"guards/RolesGuard.html":{}}}],["reset",{"_index":118,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CaslModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["response",{"_index":310,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["response.status(status).json",{"_index":323,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["result",{"_index":488,"title":{},"body":{"injectables/UsersService.html":{}}}],["results",{"_index":72,"title":{},"body":{"guards/AbilitiesGuard.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthEntity.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CaslAbilityFactory.html":{},"modules/CaslModule.html":{},"modules/CommonModule.html":{},"classes/CreateUserDto.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IAbilityMeta.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"guards/RolesGuard.html":{},"classes/UpdateUserDto.html":{},"classes/UserEntity.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":59,"title":{},"body":{"guards/AbilitiesGuard.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CaslAbilityFactory.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"guards/RolesGuard.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["returns",{"_index":25,"title":{},"body":{"guards/AbilitiesGuard.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CaslAbilityFactory.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"guards/RolesGuard.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["role",{"_index":392,"title":{},"body":{"classes/UserEntity.html":{}}}],["roles",{"_index":506,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["roles_key",{"_index":378,"title":{},"body":{"guards/RolesGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["rolesguard",{"_index":374,"title":{"guards/RolesGuard.html":{}},"body":{"guards/RolesGuard.html":{},"coverage.html":{}}}],["roundsofhashing",{"_index":501,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["roundsofhasing",{"_index":480,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["rule",{"_index":64,"title":{},"body":{"guards/AbilitiesGuard.html":{}}}],["rule.subject",{"_index":58,"title":{},"body":{"guards/AbilitiesGuard.html":{}}}],["rules",{"_index":48,"title":{},"body":{"guards/AbilitiesGuard.html":{}}}],["rules.every((rule",{"_index":61,"title":{},"body":{"guards/AbilitiesGuard.html":{}}}],["rules.foreach((rule",{"_index":56,"title":{},"body":{"guards/AbilitiesGuard.html":{}}}],["run",{"_index":569,"title":{},"body":{"index.html":{}}}],["running",{"_index":566,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":36,"title":{},"body":{"guards/AbilitiesGuard.html":{},"injectables/JwtAuthGuard.html":{},"guards/RolesGuard.html":{},"dependencies.html":{}}}],["scalable",{"_index":552,"title":{},"body":{"index.html":{}}}],["secret",{"_index":191,"title":{},"body":{"modules/AuthModule.html":{}}}],["secretorkey",{"_index":366,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["server",{"_index":553,"title":{},"body":{"index.html":{}}}],["setmetadata",{"_index":329,"title":{},"body":{"interfaces/IAbilityMeta.html":{}}}],["setmetadata(ability_key",{"_index":332,"title":{},"body":{"interfaces/IAbilityMeta.html":{},"miscellaneous/variables.html":{}}}],["setmetadata(is_public_key",{"_index":633,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setmetadata(roles_key",{"_index":636,"title":{},"body":{"miscellaneous/variables.html":{}}}],["shop",{"_index":621,"title":{},"body":{"properties.html":{}}}],["side",{"_index":554,"title":{},"body":{"index.html":{}}}],["signoptions",{"_index":193,"title":{},"body":{"modules/AuthModule.html":{}}}],["source",{"_index":4,"title":{},"body":{"guards/AbilitiesGuard.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthEntity.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CaslAbilityFactory.html":{},"modules/CaslModule.html":{},"modules/CommonModule.html":{},"classes/CreateUserDto.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IAbilityMeta.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"guards/RolesGuard.html":{},"classes/UpdateUserDto.html":{},"classes/UserEntity.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["sponsors",{"_index":588,"title":{},"body":{"index.html":{}}}],["src/.../abilities.decorator.ts",{"_index":628,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../casl",{"_index":540,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../main.ts",{"_index":543,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../public.decorator.ts",{"_index":629,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../roles.decorator.ts",{"_index":630,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../users.service.ts",{"_index":631,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.controller.ts",{"_index":77,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:11",{"_index":81,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.controller.ts:16",{"_index":85,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":120,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":138,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":139,"title":{},"body":{"injectables/AppService.html":{}}}],["src/auth/auth.controller.ts",{"_index":143,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts:22",{"_index":150,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.module.ts",{"_index":179,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.service.ts",{"_index":196,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/auth.service.ts:12",{"_index":201,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:18",{"_index":203,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/dto/login.dto.ts",{"_index":369,"title":{},"body":{"classes/LoginDto.html":{},"coverage.html":{}}}],["src/auth/dto/login.dto.ts:14",{"_index":373,"title":{},"body":{"classes/LoginDto.html":{}}}],["src/auth/dto/login.dto.ts:8",{"_index":371,"title":{},"body":{"classes/LoginDto.html":{}}}],["src/auth/entity/auth.entity.ts",{"_index":170,"title":{},"body":{"classes/AuthEntity.html":{},"coverage.html":{}}}],["src/auth/entity/auth.entity.ts:5",{"_index":174,"title":{},"body":{"classes/AuthEntity.html":{}}}],["src/auth/guards/jwt",{"_index":333,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["src/auth/jwt.strategy.ts",{"_index":347,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/auth/jwt.strategy.ts:16",{"_index":354,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/jwt.strategy.ts:8",{"_index":351,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/casl/casl",{"_index":220,"title":{},"body":{"classes/CaslAbilityFactory.html":{},"controllers/UsersController.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/casl/casl.module",{"_index":465,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/casl/casl.module.ts",{"_index":260,"title":{},"body":{"modules/CaslModule.html":{}}}],["src/casl/decorators/abilities.decorator",{"_index":436,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/casl/decorators/abilities.decorator.ts",{"_index":328,"title":{},"body":{"interfaces/IAbilityMeta.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/casl/guards/abilities.guard",{"_index":437,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/casl/guards/abilities.guard.ts",{"_index":6,"title":{},"body":{"guards/AbilitiesGuard.html":{},"coverage.html":{}}}],["src/casl/guards/abilities.guard.ts:14",{"_index":15,"title":{},"body":{"guards/AbilitiesGuard.html":{}}}],["src/casl/guards/abilities.guard.ts:19",{"_index":23,"title":{},"body":{"guards/AbilitiesGuard.html":{}}}],["src/common/common.module.ts",{"_index":261,"title":{},"body":{"modules/CommonModule.html":{}}}],["src/common/decorators/public.decorator",{"_index":160,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["src/common/decorators/public.decorator.ts",{"_index":504,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/common/decorators/roles.decorator.ts",{"_index":505,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/common/filters/http",{"_index":298,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"coverage.html":{}}}],["src/common/guards/roles.guard.ts",{"_index":375,"title":{},"body":{"guards/RolesGuard.html":{},"coverage.html":{}}}],["src/common/guards/roles.guard.ts:10",{"_index":377,"title":{},"body":{"guards/RolesGuard.html":{}}}],["src/common/guards/roles.guard.ts:8",{"_index":376,"title":{},"body":{"guards/RolesGuard.html":{}}}],["src/main.ts",{"_index":507,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/users/dto/create",{"_index":267,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["src/users/dto/update",{"_index":386,"title":{},"body":{"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["src/users/entities/user.entity",{"_index":233,"title":{},"body":{"classes/CaslAbilityFactory.html":{}}}],["src/users/entities/user.entity.ts",{"_index":390,"title":{},"body":{"classes/UserEntity.html":{},"coverage.html":{}}}],["src/users/entities/user.entity.ts:12",{"_index":396,"title":{},"body":{"classes/UserEntity.html":{}}}],["src/users/entities/user.entity.ts:15",{"_index":404,"title":{},"body":{"classes/UserEntity.html":{}}}],["src/users/entities/user.entity.ts:18",{"_index":399,"title":{},"body":{"classes/UserEntity.html":{}}}],["src/users/entities/user.entity.ts:21",{"_index":401,"title":{},"body":{"classes/UserEntity.html":{}}}],["src/users/entities/user.entity.ts:24",{"_index":397,"title":{},"body":{"classes/UserEntity.html":{}}}],["src/users/entities/user.entity.ts:27",{"_index":395,"title":{},"body":{"classes/UserEntity.html":{}}}],["src/users/entities/user.entity.ts:30",{"_index":403,"title":{},"body":{"classes/UserEntity.html":{}}}],["src/users/entities/user.entity.ts:6",{"_index":398,"title":{},"body":{"classes/UserEntity.html":{}}}],["src/users/entities/user.entity.ts:9",{"_index":402,"title":{},"body":{"classes/UserEntity.html":{}}}],["src/users/users.controller.ts",{"_index":406,"title":{},"body":{"controllers/UsersController.html":{},"coverage.html":{}}}],["src/users/users.controller.ts:45",{"_index":412,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:52",{"_index":415,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:62",{"_index":419,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:73",{"_index":426,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:97",{"_index":423,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.module",{"_index":189,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/users/users.module.ts",{"_index":463,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/users/users.service",{"_index":362,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/users/users.service.ts",{"_index":466,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/users/users.service.ts:10",{"_index":467,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:13",{"_index":470,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:23",{"_index":471,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:31",{"_index":474,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:39",{"_index":478,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:55",{"_index":476,"title":{},"body":{"injectables/UsersService.html":{}}}],["start",{"_index":570,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":573,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":575,"title":{},"body":{"index.html":{}}}],["started",{"_index":546,"title":{"index.html":{}},"body":{}}],["starter",{"_index":557,"title":{},"body":{"index.html":{}}}],["statements",{"_index":494,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":315,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["stay",{"_index":597,"title":{},"body":{"index.html":{}}}],["strategy",{"_index":359,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["string",{"_index":82,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/AuthEntity.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/UserEntity.html":{},"controllers/UsersController.html":{},"miscellaneous/variables.html":{}}}],["subject",{"_index":63,"title":{},"body":{"guards/AbilitiesGuard.html":{},"interfaces/IAbilityMeta.html":{},"controllers/UsersController.html":{}}}],["subjects",{"_index":240,"title":{},"body":{"classes/CaslAbilityFactory.html":{},"interfaces/IAbilityMeta.html":{},"miscellaneous/typealiases.html":{}}}],["super",{"_index":342,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{}}}],["super.canactivate(context",{"_index":346,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["support",{"_index":589,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":608,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":535,"title":{},"body":{"dependencies.html":{}}}],["t",{"_index":302,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["table",{"_index":512,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":511,"title":{},"body":{"coverage.html":{}}}],["test",{"_index":578,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":581,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":580,"title":{},"body":{"index.html":{}}}],["tests",{"_index":577,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":587,"title":{},"body":{"index.html":{}}}],["this.abilityfactory.defineability(user",{"_index":443,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.appservice.gethello",{"_index":98,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authservice.login(email",{"_index":167,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.caslabilityfactory.createforuser(req.user",{"_index":450,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.caslabilityfactory.createforuser(user",{"_index":54,"title":{},"body":{"guards/AbilitiesGuard.html":{}}}],["this.jwtservice.sign",{"_index":217,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.prisma.user.create",{"_index":485,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.prisma.user.delete",{"_index":490,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.prisma.user.findmany",{"_index":486,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.prisma.user.findunique",{"_index":209,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["this.prisma.user.update",{"_index":489,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.reflector.get(ability_key",{"_index":49,"title":{},"body":{"guards/AbilitiesGuard.html":{}}}],["this.reflector.getallandoverride",{"_index":381,"title":{},"body":{"guards/RolesGuard.html":{}}}],["this.reflector.getallandoverride(is_public_key",{"_index":344,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["this.usersservice.create(createuserdto",{"_index":441,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.findall",{"_index":444,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.findone",{"_index":367,"title":{},"body":{"injectables/JwtStrategy.html":{},"controllers/UsersController.html":{}}}],["this.usersservice.remove",{"_index":458,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.update",{"_index":453,"title":{},"body":{"controllers/UsersController.html":{}}}],["throw",{"_index":69,"title":{},"body":{"guards/AbilitiesGuard.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/UsersController.html":{}}}],["timestamp",{"_index":324,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["touch",{"_index":598,"title":{},"body":{"index.html":{}}}],["transformer",{"_index":525,"title":{},"body":{"dependencies.html":{}}}],["true",{"_index":60,"title":{},"body":{"guards/AbilitiesGuard.html":{},"injectables/JwtAuthGuard.html":{},"guards/RolesGuard.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":55,"title":{},"body":{"guards/AbilitiesGuard.html":{},"controllers/UsersController.html":{}}}],["twitter",{"_index":604,"title":{},"body":{"index.html":{}}}],["type",{"_index":19,"title":{},"body":{"guards/AbilitiesGuard.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/AuthEntity.html":{},"injectables/AuthService.html":{},"classes/CaslAbilityFactory.html":{},"classes/CreateUserDto.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IAbilityMeta.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"guards/RolesGuard.html":{},"classes/UserEntity.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":625,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":320,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["types",{"_index":519,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":556,"title":{},"body":{"index.html":{}}}],["ui",{"_index":536,"title":{},"body":{"dependencies.html":{}}}],["unauthorizedexception",{"_index":205,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["unauthorizedexception('invalid",{"_index":216,"title":{},"body":{"injectables/AuthService.html":{}}}],["undefined",{"_index":414,"title":{},"body":{"controllers/UsersController.html":{}}}],["unit",{"_index":576,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":356,"title":{},"body":{"injectables/JwtStrategy.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["unlicensed",{"_index":623,"title":{},"body":{"properties.html":{}}}],["up",{"_index":565,"title":{},"body":{"index.html":{}}}],["update",{"_index":238,"title":{},"body":{"classes/CaslAbilityFactory.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{}}}],["update(id",{"_index":424,"title":{},"body":{"controllers/UsersController.html":{}}}],["update(params",{"_index":477,"title":{},"body":{"injectables/UsersService.html":{}}}],["updatedat",{"_index":393,"title":{},"body":{"classes/UserEntity.html":{}}}],["updateuserdto",{"_index":385,"title":{"classes/UpdateUserDto.html":{}},"body":{"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["useability",{"_index":93,"title":{},"body":{"controllers/AppController.html":{}}}],["useclass",{"_index":136,"title":{},"body":{"modules/AppModule.html":{},"modules/CommonModule.html":{}}}],["useguards",{"_index":88,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["user",{"_index":51,"title":{},"body":{"guards/AbilitiesGuard.html":{},"injectables/AuthService.html":{},"classes/CaslAbilityFactory.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"guards/RolesGuard.html":{},"classes/UserEntity.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["user'})@isnotempty()@isstring()@isemail",{"_index":273,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user'})@isnotempty()@isstring()@minlength(6)@maxlength(50",{"_index":277,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user'})@isnotempty()@isstring()@minlength(8)@maxlength(100",{"_index":275,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto",{"_index":388,"title":{},"body":{"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["user.dto.ts",{"_index":268,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["user.dto.ts:17",{"_index":274,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:24",{"_index":276,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:31",{"_index":278,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:37",{"_index":282,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:41",{"_index":280,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.id",{"_index":219,"title":{},"body":{"injectables/AuthService.html":{},"classes/CaslAbilityFactory.html":{}}}],["user.password",{"_index":215,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["user.role",{"_index":244,"title":{},"body":{"classes/CaslAbilityFactory.html":{}}}],["user.role?.includes(role",{"_index":384,"title":{},"body":{"guards/RolesGuard.html":{}}}],["userentity",{"_index":95,"title":{"classes/UserEntity.html":{}},"body":{"controllers/AppController.html":{},"classes/CaslAbilityFactory.html":{},"classes/UserEntity.html":{},"controllers/UsersController.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["userentity).because('you",{"_index":250,"title":{},"body":{"classes/CaslAbilityFactory.html":{}}}],["userentity})@apibearerauth",{"_index":418,"title":{},"body":{"controllers/UsersController.html":{}}}],["userentity})@apibearerauth()@abilities({action",{"_index":422,"title":{},"body":{"controllers/UsersController.html":{}}}],["userid",{"_index":218,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["username",{"_index":271,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UserEntity.html":{}}}],["userrole",{"_index":231,"title":{},"body":{"classes/CaslAbilityFactory.html":{},"guards/RolesGuard.html":{},"classes/UserEntity.html":{},"miscellaneous/variables.html":{}}}],["userrole.admin",{"_index":245,"title":{},"body":{"classes/CaslAbilityFactory.html":{}}}],["users",{"_index":251,"title":{},"body":{"classes/CaslAbilityFactory.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["users.controller",{"_index":464,"title":{},"body":{"modules/UsersModule.html":{}}}],["users.filter((user",{"_index":487,"title":{},"body":{"injectables/UsersService.html":{}}}],["users.service",{"_index":430,"title":{},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["users/entities/user.entity",{"_index":96,"title":{},"body":{"controllers/AppController.html":{}}}],["users/users.module",{"_index":123,"title":{},"body":{"modules/AppModule.html":{}}}],["userscontroller",{"_index":405,"title":{"controllers/UsersController.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["usersmodule",{"_index":116,"title":{"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersservice",{"_index":350,"title":{"injectables/UsersService.html":{}},"body":{"injectables/JwtStrategy.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["userupdate",{"_index":451,"title":{},"body":{"controllers/UsersController.html":{}}}],["validate",{"_index":348,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validate(payload",{"_index":352,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validator",{"_index":290,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"dependencies.html":{}}}],["value",{"_index":541,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":500,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":627,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":618,"title":{},"body":{"properties.html":{}}}],["via",{"_index":562,"title":{},"body":{"index.html":{}}}],["void",{"_index":307,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["watch",{"_index":571,"title":{},"body":{"index.html":{}}}],["website",{"_index":602,"title":{},"body":{"index.html":{}}}],["world",{"_index":141,"title":{},"body":{"injectables/AppService.html":{}}}],["you'd",{"_index":592,"title":{},"body":{"index.html":{}}}],["zenfection",{"_index":624,"title":{},"body":{"properties.html":{}}}],["zoom",{"_index":117,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CaslModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"guards/AbilitiesGuard.html":{"url":"guards/AbilitiesGuard.html","title":"guard - AbilitiesGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    AbilitiesGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/casl/guards/abilities.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(reflector: Reflector, caslAbilityFactory: CaslAbilityFactory)\n                    \n                \n                        \n                            \n                                Defined in src/casl/guards/abilities.guard.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        caslAbilityFactory\n                                                  \n                                                        \n                                                                        CaslAbilityFactory\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/casl/guards/abilities.guard.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     boolean | Promise | Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { CaslAbilityFactory } from './../casl-ability.factory';\nimport {\n  CanActivate,\n  ExecutionContext,\n  ForbiddenException,\n  Injectable,\n} from '@nestjs/common';\nimport { Reflector } from '@nestjs/core';\nimport { Observable } from 'rxjs';\nimport { ABILITY_KEY, IAbilityMeta } from '../decorators/abilities.decorator';\nimport { ForbiddenError } from '@casl/ability';\n\n@Injectable()\nexport class AbilitiesGuard implements CanActivate {\n  constructor(\n    private readonly reflector: Reflector,\n    private readonly caslAbilityFactory: CaslAbilityFactory,\n  ) {}\n  canActivate(\n    context: ExecutionContext,\n  ): boolean | Promise | Observable {\n    const rules =\n      this.reflector.get(ABILITY_KEY, context.getHandler()) ||\n      [];\n\n    const user = context.switchToHttp().getRequest().user;\n    const ability = this.caslAbilityFactory.createForUser(user);\n\n    try {\n      rules.forEach((rule) => {\n        ForbiddenError.from(ability).throwUnlessCan(rule.action, rule.subject);\n      });\n      return true;\n      // return rules.every((rule) => {\n      //   const { action, subject } = rule;\n      //   return ability.can(action, subject);\n      // });\n    } catch (error) {\n      if (error instanceof ForbiddenError) {\n        throw new ForbiddenException(error.message);\n      }\n    }\n    return true;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getHello\n                            \n                            \n                                    \n                                getProfile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                    \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        getProfile\n                        \n                    \n                \n            \n            \n                \n                    \n                    getProfile(req: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('profile')\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Request, UseGuards } from '@nestjs/common';\nimport { AppService } from './app.service';\nimport { AccessGuard, Actions, UseAbility } from 'nest-casl';\nimport { UserEntity } from './users/entities/user.entity';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n\n  @Get('profile')\n  getProfile(@Request() req: any) {\n    return req.user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nCaslModule\n\nCaslModule\n\nAppModule -->\n\nCaslModule->AppModule\n\n\n\n\n\nCommonModule\n\nCommonModule\n\nAppModule -->\n\nCommonModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            CaslModule\n                        \n                        \n                            CommonModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { UsersModule } from './users/users.module';\nimport { CommonModule } from './common/common.module';\nimport { ConfigModule } from '@nestjs/config';\nimport { AuthModule } from './auth/auth.module';\nimport { CaslModule } from './casl/casl.module';\nimport { JwtAuthGuard } from './auth/guards/jwt-auth.guard';\nimport { AbilitiesGuard } from './casl/guards/abilities.guard';\n\n@Module({\n  imports: [\n    ConfigModule.forRoot(),\n    CaslModule,\n    UsersModule,\n    CommonModule,\n    AuthModule,\n  ],\n  controllers: [AppController],\n  providers: [\n    AppService,\n    {\n      provide: 'APP_GUARD',\n      useClass: JwtAuthGuard,\n    },\n    {\n      provide: 'APP_GUARD',\n      useClass: AbilitiesGuard,\n    },\n  ],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                login\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        login\n                        \n                    \n                \n            \n            \n                \n                    \n                    login(undefined: LoginDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@Post('login')@ApiOkResponse({type: LoginDto})\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                LoginDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Get,\n  Request,\n  Post,\n  UseGuards,\n} from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { ApiOkResponse, ApiTags } from '@nestjs/swagger';\nimport { LoginDto } from './dto/login.dto';\nimport { Public } from '../../src/common/decorators/public.decorator';\n\n@Controller('auth')\n@ApiTags('auth')\nexport class AuthController {\n  constructor(private readonly authService: AuthService) {}\n\n  @Public()\n  @Post('login')\n  @ApiOkResponse({ type: LoginDto })\n  login(@Body() { email, password }: LoginDto) {\n    return this.authService.login(email, password);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthEntity.html":{"url":"classes/AuthEntity.html","title":"class - AuthEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/entity/auth.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                accessToken\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        accessToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/entity/auth.entity.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class AuthEntity {\n  @ApiProperty()\n  accessToken: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_AuthModule_imports\n\n\n\n\nUsersModule\n\nUsersModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { AuthController } from './auth.controller';\nimport { PrismaModule } from 'nestjs-prisma';\nimport { JwtModule } from '@nestjs/jwt';\nimport { PassportModule } from '@nestjs/passport';\nimport { JwtStrategy } from './jwt.strategy';\nimport { UsersModule } from '../../src/users/users.module';\n\n@Module({\n  imports: [\n    PrismaModule,\n    PassportModule,\n    JwtModule.register({\n      secret: process.env.JWT_SECRET,\n      signOptions: { expiresIn: '5m' },\n    }),\n    UsersModule,\n  ],\n  controllers: [AuthController],\n  providers: [AuthService, JwtStrategy],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                login\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService, jwtService: JwtService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                    PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                    \n                    login(email: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  Injectable,\n  NotFoundException,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { JwtService } from '@nestjs/jwt';\nimport { PrismaService } from 'nestjs-prisma';\nimport { AuthEntity } from './entity/auth.entity';\nimport * as bcrypt from 'bcrypt';\n\n@Injectable()\nexport class AuthService {\n  constructor(\n    private readonly prisma: PrismaService,\n    private readonly jwtService: JwtService,\n  ) {}\n\n  async login(email: string, password: string): Promise {\n    const user = await this.prisma.user.findUnique({\n      where: { email },\n    });\n\n    if (!user) {\n      throw new NotFoundException(`User not found for emai: ${email}`);\n    }\n\n    const isPasswordValid = await bcrypt.compare(password, user.password);\n\n    if (!isPasswordValid) {\n      throw new UnauthorizedException('Invalid password');\n    }\n\n    return {\n      accessToken: this.jwtService.sign({ userId: user.id }),\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CaslAbilityFactory.html":{"url":"classes/CaslAbilityFactory.html","title":"class - CaslAbilityFactory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CaslAbilityFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/casl/casl-ability.factory.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createForUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createForUser\n                        \n                    \n                \n            \n            \n                \ncreateForUser(user: UserEntity)\n                \n            \n\n\n            \n                \n                    Defined in src/casl/casl-ability.factory.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                UserEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  AbilityBuilder,\n  ExtractSubjectType,\n  InferSubjects,\n  AbilityClass,\n  MongoAbility,\n  createMongoAbility,\n} from '@casl/ability';\nimport { UserRole } from '@prisma/client';\nimport { UserEntity } from '../../src/users/entities/user.entity';\n\nexport enum Action {\n  Manage = 'manage',\n  Create = 'create',\n  Read = 'read',\n  Update = 'update',\n  Delete = 'delete',\n}\n\nexport type Subjects = InferSubjects | UserEntity | 'all';\n\nexport type AppAbility = MongoAbility;\n\nexport class CaslAbilityFactory {\n  createForUser(user: UserEntity) {\n    const { can, cannot, build } = new AbilityBuilder(createMongoAbility);\n\n    if (user.role === UserRole.ADMIN) {\n      can(Action.Manage, 'all');\n    } else {\n      can(Action.Read, 'all');\n      can(Action.Update, UserEntity);\n      cannot(Action.Delete, UserEntity).because('You cannot delete users');\n      // cannot(Action.Update, UserEntity, { id: { $ne: user.id } }).because(\n      //   'You can only update your own user',\n      // );\n    }\n\n    return build({\n      detectSubjectType: (item) =>\n        item.constructor as ExtractSubjectType,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CaslModule.html":{"url":"modules/CaslModule.html","title":"module - CaslModule","body":"\n                   \n\n\n\n\n    Modules\n    CaslModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CaslModule\n\n\n\ncluster_CaslModule_exports\n\n\n\n\nCaslAbilityFactory \n\nCaslAbilityFactory \n\n\n\nCaslModule\n\nCaslModule\n\nCaslAbilityFactory  -->\n\nCaslModule->CaslAbilityFactory \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/casl/casl.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Exports\n                    \n                        \n                            CaslAbilityFactory\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { CaslAbilityFactory } from './casl-ability.factory';\n\n@Module({\n  providers: [CaslAbilityFactory],\n  exports: [CaslAbilityFactory],\n})\nexport class CaslModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CommonModule.html":{"url":"modules/CommonModule.html","title":"module - CommonModule","body":"\n                   \n\n\n\n\n    Modules\n    CommonModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/common/common.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { APP_FILTER } from '@nestjs/core';\nimport { HttpExceptionFilter } from './filters/http-exception.filter';\n\n@Module({\n  providers: [\n    {\n      provide: APP_FILTER,\n      useClass: HttpExceptionFilter,\n    },\n  ],\n})\nexport class CommonModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                fullname\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                password\n                            \n                            \n                                    \n                                    \n                                phone\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Email of the user'})@IsNotEmpty()@IsString()@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                        fullname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Fullname of the user'})@IsNotEmpty()@IsString()@MinLength(8)@MaxLength(100)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Password of the user'})@IsNotEmpty()@IsString()@MinLength(6)@MaxLength(50)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsPhoneNumber('VN')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@MinLength(6)@MaxLength(25)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:37\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport {\n  IsEmail,\n  IsNotEmpty,\n  IsOptional,\n  IsPhoneNumber,\n  IsString,\n  MaxLength,\n  MinLength,\n} from 'class-validator';\n\nexport class CreateUserDto {\n  @ApiProperty({ description: 'Email of the user' })\n  @IsNotEmpty()\n  @IsString()\n  @IsEmail()\n  email: string;\n\n  @ApiProperty({ description: 'Fullname of the user' })\n  @IsNotEmpty()\n  @IsString()\n  @MinLength(8)\n  @MaxLength(100)\n  fullname: string;\n\n  @ApiProperty({ description: 'Password of the user' })\n  @IsNotEmpty()\n  @IsString()\n  @MinLength(6)\n  @MaxLength(50)\n  password: string;\n\n  @IsOptional()\n  @IsString()\n  @MinLength(6)\n  @MaxLength(25)\n  username: string;\n\n  @IsOptional()\n  @IsPhoneNumber('VN')\n  phone: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HttpExceptionFilter.html":{"url":"classes/HttpExceptionFilter.html","title":"class - HttpExceptionFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HttpExceptionFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/filters/http-exception.filter.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        catch\n                        \n                    \n                \n            \n            \n                \ncatch(exception: T, host: ArgumentsHost)\n                \n            \n\n\n            \n                \n                    Defined in src/common/filters/http-exception.filter.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    exception\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    host\n                                    \n                                            ArgumentsHost\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  ArgumentsHost,\n  Catch,\n  ExceptionFilter,\n  HttpException,\n  HttpStatus,\n} from '@nestjs/common';\nimport { Response } from 'express';\n\n@Catch()\nexport class HttpExceptionFilter\n  implements ExceptionFilter\n{\n  catch(exception: T, host: ArgumentsHost) {\n    const ctx = host.switchToHttp();\n    const response = ctx.getResponse();\n\n    const status =\n      exception instanceof HttpException\n        ? exception.getStatus()\n        : HttpStatus.INTERNAL_SERVER_ERROR;\n\n    const exceptionResponse =\n      exception instanceof HttpException ? exception.getResponse() : exception;\n\n    const error =\n      typeof response === 'string'\n        ? { message: exceptionResponse }\n        : (exceptionResponse as object);\n\n    response.status(status).json({\n      ...error,\n      timestamp: new Date().toISOString(),\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IAbilityMeta.html":{"url":"interfaces/IAbilityMeta.html","title":"interface - IAbilityMeta","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IAbilityMeta\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/casl/decorators/abilities.decorator.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            action\n                                        \n                                \n                                \n                                        \n                                            subject\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        action\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        action:         Action\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Action\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        subject\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        subject:         Subjects\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Subjects\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { SetMetadata } from '@nestjs/common';\nimport { Action, Subjects } from '../casl-ability.factory';\n\nexport interface IAbilityMeta {\n  action: Action;\n  subject: Subjects;\n}\n\nexport const ABILITY_KEY = 'abilities';\nexport const Abilities = (...args: IAbilityMeta[]) =>\n  SetMetadata(ABILITY_KEY, args);\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtAuthGuard.html":{"url":"injectables/JwtAuthGuard.html","title":"injectable - JwtAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/guards/jwt-auth.guard.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(reflector: Reflector)\n                    \n                \n                        \n                            \n                                Defined in src/auth/guards/jwt-auth.guard.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/guards/jwt-auth.guard.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     boolean | Promise | Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ExecutionContext, Injectable } from '@nestjs/common';\nimport { Observable } from 'rxjs';\nimport { AuthGuard } from '@nestjs/passport';\nimport { Reflector } from '@nestjs/core';\nimport { IS_PUBLIC_KEY } from '../../common/decorators/public.decorator';\n\n@Injectable()\nexport class JwtAuthGuard extends AuthGuard('jwt') {\n  constructor(private readonly reflector: Reflector) {\n    super();\n  }\n\n  canActivate(\n    context: ExecutionContext,\n  ): boolean | Promise | Observable {\n    const isPublic = this.reflector.getAllAndOverride(IS_PUBLIC_KEY, [\n      context.getHandler(),\n      context.getClass(),\n    ]);\n    if (isPublic) {\n      return true;\n    }\n    return super.canActivate(context);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/jwt.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersService: UsersService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/jwt.strategy.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/jwt.strategy.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { ExtractJwt, Strategy } from 'passport-jwt';\nimport { UsersService } from '../../src/users/users.service';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy, 'jwt') {\n  constructor(private readonly usersService: UsersService) {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      secretOrKey: process.env.JWT_SECRET,\n    });\n  }\n\n  async validate(payload: { userId: string }) {\n    const user = await this.usersService.findOne({ id: payload.userId });\n\n    if (!user) {\n      throw new UnauthorizedException();\n    }\n\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginDto.html":{"url":"classes/LoginDto.html","title":"class - LoginDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/login.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()@IsNotEmpty()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/login.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@MinLength(6)@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/login.dto.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsEmail, IsNotEmpty, IsString, MinLength } from 'class-validator';\n\nexport class LoginDto {\n  @IsEmail()\n  @IsNotEmpty()\n  @ApiProperty()\n  email: string;\n\n  @IsString()\n  @IsNotEmpty()\n  @MinLength(6)\n  @ApiProperty()\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/RolesGuard.html":{"url":"guards/RolesGuard.html","title":"guard - RolesGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    RolesGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/common/guards/roles.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(reflector: Reflector)\n                    \n                \n                        \n                            \n                                Defined in src/common/guards/roles.guard.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/common/guards/roles.guard.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     boolean | Promise | Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Reflector } from '@nestjs/core';\nimport { CanActivate, ExecutionContext, Injectable } from '@nestjs/common';\nimport { Observable } from 'rxjs';\nimport { UserRole } from '@prisma/client';\nimport { ROLES_KEY } from '../decorators/roles.decorator';\n\n@Injectable()\nexport class RolesGuard implements CanActivate {\n  constructor(private readonly reflector: Reflector) {}\n  canActivate(\n    context: ExecutionContext,\n  ): boolean | Promise | Observable {\n    const requiredRoles = this.reflector.getAllAndOverride(\n      ROLES_KEY,\n      [context.getHandler(), context.getClass()],\n    );\n\n    if (!requiredRoles) {\n      return true;\n    }\n\n    const { user } = context.switchToHttp().getRequest();\n    return requiredRoles.some((role) => user.role?.includes(role));\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserDto.html":{"url":"classes/UpdateUserDto.html","title":"class - UpdateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/update-user.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateUserDto } from './create-user.dto';\n\nexport class UpdateUserDto extends PartialType(CreateUserDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserEntity.html":{"url":"classes/UserEntity.html","title":"class - UserEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/entities/user.entity.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        User\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                fullname\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                password\n                            \n                            \n                                    \n                                phone\n                            \n                            \n                                    \n                                role\n                            \n                            \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        fullname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :     UserRole\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { User, UserRole } from '@prisma/client';\n\nexport class UserEntity implements User {\n  @ApiProperty()\n  id: string;\n\n  @ApiProperty()\n  role: UserRole;\n\n  @ApiProperty()\n  email: string;\n\n  @ApiProperty()\n  username: string | null;\n\n  @ApiProperty()\n  password: string;\n\n  @ApiProperty()\n  phone: string | null;\n\n  @ApiProperty()\n  fullname: string;\n\n  @ApiProperty()\n  createdAt: Date;\n\n  @ApiProperty()\n  updatedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UsersController.html":{"url":"controllers/UsersController.html","title":"controller - UsersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UsersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                users\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                create\n                            \n                            \n                                    \n                                    \n                                    \n                                findAll\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                findOne\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                remove\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createUserDto: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@Public()@ApiCreatedResponse({type: UserEntity})\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserDto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@Public()@ApiOkResponse({type: undefined})\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ApiOkResponse({type: UserEntity})@ApiBearerAuth()\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        \n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@ApiOkResponse({type: UserEntity})@ApiBearerAuth()@Abilities({action: undefined, subject: UserEntity})\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:97\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, updateUserDto: UpdateUserDto, req: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@ApiOkResponse({type: UserEntity})@ApiBearerAuth()\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateUserDto\n                                    \n                                                UpdateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    req\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n  Request,\n  NotFoundException,\n  BadRequestException,\n  ForbiddenException,\n  UseGuards,\n} from '@nestjs/common';\nimport { UsersService } from './users.service';\nimport { CreateUserDto } from './dto/create-user.dto';\nimport { UpdateUserDto } from './dto/update-user.dto';\nimport {\n  ApiBearerAuth,\n  ApiCreatedResponse,\n  ApiOkResponse,\n  ApiTags,\n} from '@nestjs/swagger';\nimport { UserEntity } from './entities/user.entity';\nimport { Public } from '../../src/common/decorators/public.decorator';\nimport {\n  Action,\n  CaslAbilityFactory,\n} from '../../src/casl/casl-ability.factory';\nimport { ForbiddenError } from '@casl/ability';\nimport { Abilities } from '../../src/casl/decorators/abilities.decorator';\nimport { AbilitiesGuard } from '../../src/casl/guards/abilities.guard';\n\n@Controller('users')\n@ApiTags('users')\nexport class UsersController {\n  constructor(\n    private readonly usersService: UsersService,\n    private readonly caslAbilityFactory: CaslAbilityFactory,\n  ) {}\n\n  @Post()\n  @Public()\n  @ApiCreatedResponse({ type: UserEntity })\n  create(@Body() createUserDto: CreateUserDto) {\n    return this.usersService.create(createUserDto);\n  }\n\n  @Get()\n  @Public()\n  @ApiOkResponse({ type: [UserEntity] })\n  findAll() {\n    // const user = req.user;\n    // console.log(user);\n    // const ability = this.abilityFactory.defineAbility(user);\n    return this.usersService.findAll();\n  }\n\n  @Get(':id')\n  @ApiOkResponse({ type: UserEntity })\n  @ApiBearerAuth()\n  async findOne(@Param('id') id: string) {\n    const user = await this.usersService.findOne({ id });\n    if (!user) {\n      throw new NotFoundException(`${id} not found`);\n    }\n    return user;\n  }\n\n  @Patch(':id')\n  @ApiOkResponse({ type: UserEntity })\n  @ApiBearerAuth()\n  async update(\n    @Param('id') id: string,\n    @Body() updateUserDto: UpdateUserDto,\n    @Request() req: any,\n  ) {\n    const ability = this.caslAbilityFactory.createForUser(req.user);\n    const userUpdate = await this.usersService.findOne({ id });\n    try {\n      ForbiddenError.from(ability).throwUnlessCan(Action.Update, userUpdate);\n      return this.usersService.update({\n        where: { id },\n        data: updateUserDto,\n      });\n    } catch (error) {\n      if (error instanceof ForbiddenError) {\n        throw new ForbiddenException(error.message);\n      }\n    }\n  }\n\n  @Delete(':id')\n  @ApiOkResponse({ type: UserEntity })\n  @ApiBearerAuth()\n  @Abilities({ action: Action.Delete, subject: UserEntity })\n  remove(@Param('id') id: string) {\n    return this.usersService.remove({ id });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_imports\n\n\n\ncluster_UsersModule_providers\n\n\n\ncluster_UsersModule_exports\n\n\n\n\nCaslModule\n\nCaslModule\n\n\n\nUsersModule\n\nUsersModule\n\nUsersModule -->\n\nCaslModule->UsersModule\n\n\n\n\n\nUsersService \n\nUsersService \n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/users/users.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UsersController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CaslModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UsersService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UsersService } from './users.service';\nimport { UsersController } from './users.controller';\nimport { PrismaModule } from 'nestjs-prisma';\nimport { CaslModule } from '../../src/casl/casl.module';\n\n@Module({\n  imports: [PrismaModule, CaslModule],\n  controllers: [UsersController],\n  providers: [UsersService],\n  exports: [UsersService],\n})\nexport class UsersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/users/users.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                    PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(data: Prisma.UserCreateInput)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            Prisma.UserCreateInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(where: Prisma.UserWhereUniqueInput)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    where\n                                    \n                                            Prisma.UserWhereUniqueInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(where: Prisma.UserWhereUniqueInput)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    where\n                                    \n                                            Prisma.UserWhereUniqueInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(params: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { PrismaService } from 'nestjs-prisma';\nimport { Prisma, User } from '@prisma/client';\nimport * as bcrypt from 'bcrypt';\nimport { UpdateUserDto } from './dto/update-user.dto';\n\nexport const roundsOfHasing = 10;\n\n@Injectable()\nexport class UsersService {\n  constructor(private readonly prisma: PrismaService) {}\n\n  async create(data: Prisma.UserCreateInput): Promise {\n    const hashedPassword = await bcrypt.hash(data.password, roundsOfHasing);\n\n    data.password = hashedPassword;\n\n    return await this.prisma.user.create({\n      data,\n    });\n  }\n\n  async findAll() {\n    const users = await this.prisma.user.findMany();\n    users.filter((user) => {\n      delete user.password;\n    });\n    return users;\n  }\n\n  async findOne(where: Prisma.UserWhereUniqueInput) {\n    const user = await this.prisma.user.findUnique({\n      where,\n    });\n    // const { password, ...result } = user;\n    return user;\n  }\n\n  async update(params: {\n    where: Prisma.UserWhereUniqueInput;\n    data: UpdateUserDto;\n  }): Promise {\n    const { where, data } = params;\n\n    if (data.password) {\n      data.password = await bcrypt.hash(data.password, roundsOfHasing);\n    }\n\n    return await this.prisma.user.update({\n      data,\n      where,\n    });\n  }\n\n  async remove(where: Prisma.UserWhereUniqueInput) {\n    const user = await this.prisma.user.delete({\n      where,\n    });\n    const { password, ...result } = user;\n    return result;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                prisma/seed.ts\n            \n            function\n            main\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                prisma/seed.ts\n            \n            variable\n            prisma\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                prisma/seed.ts\n            \n            variable\n            roundsOfHashing\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/dto/login.dto.ts\n            \n            class\n            LoginDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/entity/auth.entity.ts\n            \n            class\n            AuthEntity\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/guards/jwt-auth.guard.ts\n            \n            injectable\n            JwtAuthGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/casl/casl-ability.factory.ts\n            \n            class\n            CaslAbilityFactory\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/casl/decorators/abilities.decorator.ts\n            \n            interface\n            IAbilityMeta\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/casl/decorators/abilities.decorator.ts\n            \n            variable\n            Abilities\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/casl/decorators/abilities.decorator.ts\n            \n            variable\n            ABILITY_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/casl/guards/abilities.guard.ts\n            \n            guard\n            AbilitiesGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/common/decorators/public.decorator.ts\n            \n            variable\n            IS_PUBLIC_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/decorators/public.decorator.ts\n            \n            variable\n            Public\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/decorators/roles.decorator.ts\n            \n            variable\n            Roles\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/decorators/roles.decorator.ts\n            \n            variable\n            ROLES_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/filters/http-exception.filter.ts\n            \n            class\n            HttpExceptionFilter\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/common/guards/roles.guard.ts\n            \n            guard\n            RolesGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/dto/create-user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/users/dto/update-user.dto.ts\n            \n            class\n            UpdateUserDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/entities/user.entity.ts\n            \n            class\n            UserEntity\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/users/users.controller.ts\n            \n            controller\n            UsersController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/users/users.service.ts\n            \n            injectable\n            UsersService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/users/users.service.ts\n            \n            variable\n            roundsOfHasing\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @casl/ability : ^6.5.0\n        \n            @nestjs/common : ^9.0.0\n        \n            @nestjs/config : ^3.0.0\n        \n            @nestjs/core : ^9.0.0\n        \n            @nestjs/jwt : ^10.1.0\n        \n            @nestjs/mapped-types : *\n        \n            @nestjs/passport : ^10.0.0\n        \n            @nestjs/platform-express : ^9.0.0\n        \n            @nestjs/swagger : ^6.3.0\n        \n            @prisma/client : 4.15.0\n        \n            bcrypt : ^5.1.0\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.0\n        \n            nestjs-prisma : ^0.20.0\n        \n            passport : ^0.6.0\n        \n            passport-jwt : ^4.0.1\n        \n            reflect-metadata : ^0.1.13\n        \n            rxjs : ^7.2.0\n        \n            swagger-ui-express : ^4.6.3\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Action   (src/.../casl-ability.factory.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/casl/casl-ability.factory.ts\n    \n        \n            \n                \n                    \n                        \n                        Action\n                    \n                \n                        \n                            \n                                 Manage\n                            \n                        \n                        \n                            \n                                Value : manage\n                            \n                        \n                        \n                            \n                                 Create\n                            \n                        \n                        \n                            \n                                Value : create\n                            \n                        \n                        \n                            \n                                 Read\n                            \n                        \n                        \n                            \n                                Value : read\n                            \n                        \n                        \n                            \n                                 Update\n                            \n                        \n                        \n                            \n                                Value : update\n                            \n                        \n                        \n                            \n                                 Delete\n                            \n                        \n                        \n                            \n                                Value : delete\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            main   (prisma/.../seed.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    prisma/seed.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        main\n                        \n                    \n                \n            \n            \n                \nmain()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ pnpm installDatabase via docker\n$ docker-compose up  Running the app\n# development\n$ pnpm run start\n\n# watch mode\n$ pnpm run start:dev\n\n# production mode\n$ pnpm run start:prodTest\n# unit tests\n$ pnpm run test\n\n# e2e tests\n$ pnpm run test:e2e\n\n# test coverage\n$ pnpm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CaslModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CommonModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_CaslModule\n\n\n\ncluster_CaslModule_exports\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nCaslModule\n\nCaslModule\n\n\n\nUsersModule\n\nUsersModule\n\nUsersModule -->\n\nCaslModule->UsersModule\n\n\n\nAppModule -->\n\nCaslModule->AppModule\n\n\n\n\n\nCaslAbilityFactory \n\nCaslAbilityFactory \n\nCaslAbilityFactory  -->\n\nCaslModule->CaslAbilityFactory \n\n\n\n\n\nCommonModule\n\nCommonModule\n\nAppModule -->\n\nCommonModule->AppModule\n\n\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nUsersService \n\nUsersService \n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        5 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    3 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    5 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    7 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    1 Interface\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 1.0.0\n        \n            Description : API for a shop built with NestJS and Prisma\n        \n            License : UNLICENSED\n        \n            Author : Zenfection\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AppAbility   (src/.../casl-ability.factory.ts)\n                        \n                        \n                            Subjects   (src/.../casl-ability.factory.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/casl/casl-ability.factory.ts\n    \n    \n        \n            \n                \n                    \n                    AppAbility\n                \n            \n            \n                \n                        MongoAbility<>\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Subjects\n                \n            \n            \n                \n                            InferSubjects<> | UserEntity | \"all\"\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Abilities   (src/.../abilities.decorator.ts)\n                        \n                        \n                            ABILITY_KEY   (src/.../abilities.decorator.ts)\n                        \n                        \n                            IS_PUBLIC_KEY   (src/.../public.decorator.ts)\n                        \n                        \n                            prisma   (prisma/.../seed.ts)\n                        \n                        \n                            Public   (src/.../public.decorator.ts)\n                        \n                        \n                            Roles   (src/.../roles.decorator.ts)\n                        \n                        \n                            ROLES_KEY   (src/.../roles.decorator.ts)\n                        \n                        \n                            roundsOfHashing   (prisma/.../seed.ts)\n                        \n                        \n                            roundsOfHasing   (src/.../users.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/casl/decorators/abilities.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Abilities\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (...args: IAbilityMeta[]) =>\n  SetMetadata(ABILITY_KEY, args)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ABILITY_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'abilities'\n                    \n                \n\n\n        \n    \n\n    src/common/decorators/public.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        IS_PUBLIC_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'isPublic'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => SetMetadata(IS_PUBLIC_KEY, true)\n                    \n                \n\n\n        \n    \n\n    prisma/seed.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        prisma\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new PrismaClient()\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        roundsOfHashing\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 10\n                    \n                \n\n\n        \n    \n\n    src/common/decorators/roles.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Roles\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (...roles: UserRole[]) => SetMetadata(ROLES_KEY, roles)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ROLES_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'roles'\n                    \n                \n\n\n        \n    \n\n    src/users/users.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        roundsOfHasing\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 10\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
